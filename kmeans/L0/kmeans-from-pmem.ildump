class Program
{
    function main
    {
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0x2:msq, 0x200001010:msq"
            div __temp_490$0x10e2be0, 0xA:i8, 0xA:i8
            add __temp_491$0x10e2be0, __temp_490$0x10e2be0, 0x1:i8
            mul __temp_492$0x10e2be0, __temp_491$0x10e2be0, 0x200:i8
            ldelema __temp_488$0x10e2be0, trigger$0x10eb6c0, 0x0:i8
            sub __temp_489$0x10e2be0, __temp_492$0x10e2be0, 0x0:i8
            mul __temp_489$0x10e2be0, 0x8:i, __temp_489$0x10e2be0
            sti 0x200001018:i, __temp_488$0x10e2be0
            sti 0x200001020:i, __temp_489$0x10e2be0
            lda __temp_493$0x10e2be0, pmem_in$0x10eb6c0
            mov __temp_494$0x10e2be0, 0x8:i
            sti 0x200001028:i, __temp_493$0x10e2be0
            sti 0x200001030:i, __temp_494$0x10e2be0
            asm "mov $0x0:msq, 0x200001038:msq"
            asm "mov $__newr0:msq, 0x200001040:msq"
            asm "mov $0x200001000:msq, 0x200001048:msq"
            asm "mov $0x200001010:msq, 0x200001050:msq"
            asm "mov $0x200001038:msq, 0x200001058:msq"
            asm "mov $0x200001040:msq, 0x200001060:msq"
            asm "newr 0x200001048, 0x200001050, 0x200001058, 0x200001060"
            ldi __temp_485$0x10e2be0, 0x100000400:i
            ldi __temp_486$0x10e2be0, 0x100000408:i
            add __temp_487$0x10e2be0, __temp_485$0x10e2be0, __temp_486$0x10e2be0
            lda __temp_495$0x10e2be0, init0_in_pmem$0x10eb6c0
            sub __temp_487$0x10e2be0, __temp_487$0x10e2be0, 0x8:i8
            sti __temp_487$0x10e2be0, __temp_495$0x10e2be0
            sub __temp_487$0x10e2be0, __temp_487$0x10e2be0, 0x8:i8
            sti __temp_487$0x10e2be0, 0x0:i8
            asm "exit:c"
    }
    function init0_in_pmem
    {
            mov pmem_in$0x10eb6c0, 0x40000000000:i
            mov i$0x10ca7d0, 0x0:i8
        __temp_416$0x10ca7d0:
            ble 0xA:i8, i$0x10ca7d0, __temp_418$0x10ca7d0
            div __temp_420$0x10ca650, i$0x10ca7d0, 0xA:i8
            mul __temp_421$0x10ca650, __temp_420$0x10ca650, 0x200:i8
            stelem trigger$0x10eb6c0, __temp_421$0x10ca650, 0x0:i8
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0x7:msq, 0x200001010:msq"
            add __temp_427$0x10ca650, i$0x10ca7d0, 0xA:i8
            ldelema __temp_425$0x10ca650, x$0x10eb6c0, i$0x10ca7d0
            sub __temp_426$0x10ca650, __temp_427$0x10ca650, i$0x10ca7d0
            mul __temp_426$0x10ca650, 0x8:i, __temp_426$0x10ca650
            sti 0x200001018:i, __temp_425$0x10ca650
            sti 0x200001020:i, __temp_426$0x10ca650
            add __temp_430$0x10ca650, i$0x10ca7d0, 0xA:i8
            ldelema __temp_428$0x10ca650, y$0x10eb6c0, i$0x10ca7d0
            sub __temp_429$0x10ca650, __temp_430$0x10ca650, i$0x10ca7d0
            mul __temp_429$0x10ca650, 0x8:i, __temp_429$0x10ca650
            sti 0x200001028:i, __temp_428$0x10ca650
            sti 0x200001030:i, __temp_429$0x10ca650
            add __temp_433$0x10ca650, i$0x10ca7d0, 0xA:i8
            ldelema __temp_431$0x10ca650, z$0x10eb6c0, i$0x10ca7d0
            sub __temp_432$0x10ca650, __temp_433$0x10ca650, i$0x10ca7d0
            mul __temp_432$0x10ca650, 0x8:i, __temp_432$0x10ca650
            sti 0x200001038:i, __temp_431$0x10ca650
            sti 0x200001040:i, __temp_432$0x10ca650
            add __temp_436$0x10ca650, i$0x10ca7d0, 0xA:i8
            ldelema __temp_434$0x10ca650, w$0x10eb6c0, i$0x10ca7d0
            sub __temp_435$0x10ca650, __temp_436$0x10ca650, i$0x10ca7d0
            mul __temp_435$0x10ca650, 0x8:i, __temp_435$0x10ca650
            sti 0x200001048:i, __temp_434$0x10ca650
            sti 0x200001050:i, __temp_435$0x10ca650
            div __temp_439$0x10ca650, i$0x10ca7d0, 0xA:i8
            mul __temp_440$0x10ca650, __temp_439$0x10ca650, 0x200:i8
            div __temp_441$0x10ca650, i$0x10ca7d0, 0xA:i8
            add __temp_442$0x10ca650, __temp_441$0x10ca650, 0x1:i8
            mul __temp_443$0x10ca650, __temp_442$0x10ca650, 0x200:i8
            ldelema __temp_437$0x10ca650, trigger$0x10eb6c0, __temp_440$0x10ca650
            sub __temp_438$0x10ca650, __temp_443$0x10ca650, __temp_440$0x10ca650
            mul __temp_438$0x10ca650, 0x8:i, __temp_438$0x10ca650
            sti 0x200001058:i, __temp_437$0x10ca650
            sti 0x200001060:i, __temp_438$0x10ca650
            lda __temp_444$0x10ca650, pmem_in$0x10eb6c0
            mov __temp_445$0x10ca650, 0x8:i
            sti 0x200001068:i, __temp_444$0x10ca650
            sti 0x200001070:i, __temp_445$0x10ca650
            mul __temp_448$0x10ca650, 0x4:i8, i$0x10ca7d0
            add __temp_449$0x10ca650, i$0x10ca7d0, 0xA:i8
            mul __temp_450$0x10ca650, 0x4:i8, __temp_449$0x10ca650
            ldelema __temp_446$0x10ca650, pmem_in$0x10eb6c0, __temp_448$0x10ca650
            sub __temp_447$0x10ca650, __temp_450$0x10ca650, __temp_448$0x10ca650
            mul __temp_447$0x10ca650, 0x8:i, __temp_447$0x10ca650
            sti 0x200001078:i, __temp_446$0x10ca650
            sti 0x200001080:i, __temp_447$0x10ca650
            asm "mov $0x0:msq, 0x200001088:msq"
            asm "mov $__newr0:msq, 0x200001090:msq"
            asm "mov $0x200001000:msq, 0x200001098:msq"
            asm "mov $0x200001010:msq, 0x2000010a0:msq"
            asm "mov $0x200001088:msq, 0x2000010a8:msq"
            asm "mov $0x200001090:msq, 0x2000010b0:msq"
            asm "newr 0x200001098, 0x2000010a0, 0x2000010a8, 0x2000010b0"
            ldi __temp_422$0x10ca650, 0x100000400:i
            ldi __temp_423$0x10ca650, 0x100000408:i
            add __temp_424$0x10ca650, __temp_422$0x10ca650, __temp_423$0x10ca650
            lda __temp_451$0x10ca650, init_runner_pmem$0x10eb6c0
            sub __temp_424$0x10ca650, __temp_424$0x10ca650, 0x8:i8
            sti __temp_424$0x10ca650, __temp_451$0x10ca650
            sub __temp_424$0x10ca650, __temp_424$0x10ca650, 0x8:i8
            sti __temp_424$0x10ca650, 0x10:i8
            add __temp_452$0x10ca650, i$0x10ca7d0, 0xA:i8
            sub __temp_424$0x10ca650, __temp_424$0x10ca650, 0x8:i8
            sti __temp_424$0x10ca650, __temp_452$0x10ca650
            sub __temp_424$0x10ca650, __temp_424$0x10ca650, 0x8:i8
            sti __temp_424$0x10ca650, i$0x10ca7d0
        __temp_417$0x10ca7d0:
            add i$0x10ca7d0, i$0x10ca7d0, 0xA:i8
            br __temp_416$0x10ca7d0
        __temp_418$0x10ca7d0:
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0xb:msq, 0x200001010:msq"
            ldelema __temp_457$0x10ca7d0, cx$0x10eb6c0, 0x0:i8
            sub __temp_458$0x10ca7d0, 0x2:i8, 0x0:i8
            mul __temp_458$0x10ca7d0, 0x8:i, __temp_458$0x10ca7d0
            sti 0x200001018:i, __temp_457$0x10ca7d0
            sti 0x200001020:i, __temp_458$0x10ca7d0
            ldelema __temp_459$0x10ca7d0, cy$0x10eb6c0, 0x0:i8
            sub __temp_460$0x10ca7d0, 0x2:i8, 0x0:i8
            mul __temp_460$0x10ca7d0, 0x8:i, __temp_460$0x10ca7d0
            sti 0x200001028:i, __temp_459$0x10ca7d0
            sti 0x200001030:i, __temp_460$0x10ca7d0
            ldelema __temp_461$0x10ca7d0, cz$0x10eb6c0, 0x0:i8
            sub __temp_462$0x10ca7d0, 0x2:i8, 0x0:i8
            mul __temp_462$0x10ca7d0, 0x8:i, __temp_462$0x10ca7d0
            sti 0x200001038:i, __temp_461$0x10ca7d0
            sti 0x200001040:i, __temp_462$0x10ca7d0
            ldelema __temp_463$0x10ca7d0, cw$0x10eb6c0, 0x0:i8
            sub __temp_464$0x10ca7d0, 0x2:i8, 0x0:i8
            mul __temp_464$0x10ca7d0, 0x8:i, __temp_464$0x10ca7d0
            sti 0x200001048:i, __temp_463$0x10ca7d0
            sti 0x200001050:i, __temp_464$0x10ca7d0
            ldelema __temp_465$0x10ca7d0, x$0x10eb6c0, 0x0:i8
            sub __temp_466$0x10ca7d0, 0x2:i8, 0x0:i8
            mul __temp_466$0x10ca7d0, 0x8:i, __temp_466$0x10ca7d0
            sti 0x200001058:i, __temp_465$0x10ca7d0
            sti 0x200001060:i, __temp_466$0x10ca7d0
            ldelema __temp_467$0x10ca7d0, y$0x10eb6c0, 0x0:i8
            sub __temp_468$0x10ca7d0, 0x2:i8, 0x0:i8
            mul __temp_468$0x10ca7d0, 0x8:i, __temp_468$0x10ca7d0
            sti 0x200001068:i, __temp_467$0x10ca7d0
            sti 0x200001070:i, __temp_468$0x10ca7d0
            ldelema __temp_469$0x10ca7d0, z$0x10eb6c0, 0x0:i8
            sub __temp_470$0x10ca7d0, 0x2:i8, 0x0:i8
            mul __temp_470$0x10ca7d0, 0x8:i, __temp_470$0x10ca7d0
            sti 0x200001078:i, __temp_469$0x10ca7d0
            sti 0x200001080:i, __temp_470$0x10ca7d0
            ldelema __temp_471$0x10ca7d0, w$0x10eb6c0, 0x0:i8
            sub __temp_472$0x10ca7d0, 0x2:i8, 0x0:i8
            mul __temp_472$0x10ca7d0, 0x8:i, __temp_472$0x10ca7d0
            sti 0x200001088:i, __temp_471$0x10ca7d0
            sti 0x200001090:i, __temp_472$0x10ca7d0
            ldelema __temp_473$0x10ca7d0, trigger$0x10eb6c0, 0x0:i8
            sub __temp_474$0x10ca7d0, 0xA:i8, 0x0:i8
            mul __temp_474$0x10ca7d0, 0x8:i, __temp_474$0x10ca7d0
            sti 0x200001098:i, __temp_473$0x10ca7d0
            sti 0x2000010A0:i, __temp_474$0x10ca7d0
            lda __temp_475$0x10ca7d0, iter$0x10eb6c0
            mov __temp_476$0x10ca7d0, 0x8:i
            sti 0x2000010A8:i, __temp_475$0x10ca7d0
            sti 0x2000010B0:i, __temp_476$0x10ca7d0
            lda __temp_477$0x10ca7d0, pmem_in$0x10eb6c0
            mov __temp_478$0x10ca7d0, 0x8:i
            sti 0x2000010B8:i, __temp_477$0x10ca7d0
            sti 0x2000010C0:i, __temp_478$0x10ca7d0
            asm "mov $0x1:msq, 0x2000010c8:msq"
            div __temp_481$0x10ca7d0, 0xA:i8, 0xA:i8
            add __temp_482$0x10ca7d0, __temp_481$0x10ca7d0, 0x1:i8
            mul __temp_483$0x10ca7d0, __temp_482$0x10ca7d0, 0x200:i8
            ldelema __temp_479$0x10ca7d0, trigger$0x10eb6c0, 0x0:i8
            sub __temp_480$0x10ca7d0, __temp_483$0x10ca7d0, 0x0:i8
            mul __temp_480$0x10ca7d0, 0x8:i, __temp_480$0x10ca7d0
            sti 0x2000010D0:i, __temp_479$0x10ca7d0
            sti 0x2000010D8:i, __temp_480$0x10ca7d0
            asm "mov $__newr0:msq, 0x2000010e0:msq"
            asm "mov $0x200001000:msq, 0x2000010e8:msq"
            asm "mov $0x200001010:msq, 0x2000010f0:msq"
            asm "mov $0x2000010c8:msq, 0x2000010f8:msq"
            asm "mov $0x2000010e0:msq, 0x200001100:msq"
            asm "newr 0x2000010e8, 0x2000010f0, 0x2000010f8, 0x200001100"
            ldi __temp_454$0x10ca7d0, 0x100000400:i
            ldi __temp_455$0x10ca7d0, 0x100000408:i
            add __temp_456$0x10ca7d0, __temp_454$0x10ca7d0, __temp_455$0x10ca7d0
            lda __temp_484$0x10ca7d0, on_init1_finished$0x10eb6c0
            sub __temp_456$0x10ca7d0, __temp_456$0x10ca7d0, 0x8:i8
            sti __temp_456$0x10ca7d0, __temp_484$0x10ca7d0
            sub __temp_456$0x10ca7d0, __temp_456$0x10ca7d0, 0x8:i8
            sti __temp_456$0x10ca7d0, 0x0:i8
            asm "exit:c"
    }
    function init_runner_pmem
    {
            mov i$0x10bf5f0, start$0x10bf550
        __temp_398$0x10bf5f0:
            ble end$0x10bf550, i$0x10bf5f0, __temp_400$0x10bf5f0
            mul __temp_402$0x10bf690, 0x4:i8, i$0x10bf5f0
            ldelem __temp_403$0x10bf690, pmem_in$0x10eb6c0, __temp_402$0x10bf690
            stelem x$0x10eb6c0, i$0x10bf5f0, __temp_403$0x10bf690
            mul __temp_404$0x10bf690, 0x4:i8, i$0x10bf5f0
            add __temp_405$0x10bf690, __temp_404$0x10bf690, 0x1:i8
            ldelem __temp_406$0x10bf690, pmem_in$0x10eb6c0, __temp_405$0x10bf690
            stelem y$0x10eb6c0, i$0x10bf5f0, __temp_406$0x10bf690
            mul __temp_407$0x10bf690, 0x4:i8, i$0x10bf5f0
            add __temp_408$0x10bf690, __temp_407$0x10bf690, 0x2:i8
            ldelem __temp_409$0x10bf690, pmem_in$0x10eb6c0, __temp_408$0x10bf690
            stelem z$0x10eb6c0, i$0x10bf5f0, __temp_409$0x10bf690
            mul __temp_410$0x10bf690, 0x4:i8, i$0x10bf5f0
            add __temp_411$0x10bf690, __temp_410$0x10bf690, 0x3:i8
            ldelem __temp_412$0x10bf690, pmem_in$0x10eb6c0, __temp_411$0x10bf690
            stelem w$0x10eb6c0, i$0x10bf5f0, __temp_412$0x10bf690
        __temp_399$0x10bf5f0:
            add i$0x10bf5f0, i$0x10bf5f0, 0x1:i8
            br __temp_398$0x10bf5f0
        __temp_400$0x10bf5f0:
            div __temp_414$0x10bf5f0, start$0x10bf550, 0xA:i8
            mul __temp_415$0x10bf5f0, __temp_414$0x10bf5f0, 0x200:i8
            stelem trigger$0x10eb6c0, __temp_415$0x10bf5f0, 0x1:i8
            asm "exit:c"
    }
    function on_init1_finished
    {
            mov i$0x10947f0, 0x0:i8
        __temp_275$0x10947f0:
            ble 0x200:i8, i$0x10947f0, __temp_277$0x10947f0
            ldelem __temp_280$0x1094890, trigger$0x10eb6c0, i$0x10947f0
            bne __temp_280$0x1094890, 0x1:i8, __temp_282$0x1094890
            br __temp_279$0x1094890
        __temp_282$0x1094890:
            asm "exit:a"
        __temp_279$0x1094890:
        __temp_276$0x10947f0:
            add i$0x10947f0, i$0x10947f0, 0x200:i8
            br __temp_275$0x10947f0
        __temp_277$0x10947f0:
            stelem trigger$0x10eb6c0, 0x0:i8, 0x3:i8
            mov i$0x10947f0, 0x0:i8
        __temp_284$0x10947f0:
            ble 0x2:i8, i$0x10947f0, __temp_286$0x10947f0
            ldelem __temp_288$0x10963d0, x$0x10eb6c0, i$0x10947f0
            stelem cx$0x10eb6c0, i$0x10947f0, __temp_288$0x10963d0
            ldelem __temp_289$0x10963d0, y$0x10eb6c0, i$0x10947f0
            stelem cy$0x10eb6c0, i$0x10947f0, __temp_289$0x10963d0
            ldelem __temp_290$0x10963d0, z$0x10eb6c0, i$0x10947f0
            stelem cz$0x10eb6c0, i$0x10947f0, __temp_290$0x10963d0
            ldelem __temp_291$0x10963d0, w$0x10eb6c0, i$0x10947f0
            stelem cw$0x10eb6c0, i$0x10947f0, __temp_291$0x10963d0
        __temp_285$0x10947f0:
            add i$0x10947f0, i$0x10947f0, 0x1:i8
            br __temp_284$0x10947f0
        __temp_286$0x10947f0:
            mov iter$0x10eb6c0, 0x0:i8
            call start_iteration$0x10eb6c0, <missing>
            asm "exit:cd"
    }
    function start_iteration
    {
            mov i$0x106f190, 0x0:i8
        __temp_175$0x106f190:
            ble 0xA:i8, i$0x106f190, __temp_177$0x106f190
            div __temp_179$0x106f010, i$0x106f190, 0xA:i8
            mul __temp_180$0x106f010, __temp_179$0x106f010, 0x200:i8
            stelem trigger$0x10eb6c0, __temp_180$0x106f010, 0x0:i8
            mul __temp_181$0x106f010, 0x202:i8, i$0x106f190
            div tmp1$0x106f190, __temp_181$0x106f010, 0xA:i8
            add __temp_183$0x106f010, tmp1$0x106f190, 0x2:i8
            add tmp2$0x106f190, __temp_183$0x106f010, 0x200:i8
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0xf:msq, 0x200001010:msq"
            add __temp_190$0x106f010, i$0x106f190, 0xA:i8
            ldelema __temp_188$0x106f010, x$0x10eb6c0, i$0x106f190
            sub __temp_189$0x106f010, __temp_190$0x106f010, i$0x106f190
            mul __temp_189$0x106f010, 0x8:i, __temp_189$0x106f010
            sti 0x200001018:i, __temp_188$0x106f010
            sti 0x200001020:i, __temp_189$0x106f010
            add __temp_193$0x106f010, i$0x106f190, 0xA:i8
            ldelema __temp_191$0x106f010, y$0x10eb6c0, i$0x106f190
            sub __temp_192$0x106f010, __temp_193$0x106f010, i$0x106f190
            mul __temp_192$0x106f010, 0x8:i, __temp_192$0x106f010
            sti 0x200001028:i, __temp_191$0x106f010
            sti 0x200001030:i, __temp_192$0x106f010
            add __temp_196$0x106f010, i$0x106f190, 0xA:i8
            ldelema __temp_194$0x106f010, z$0x10eb6c0, i$0x106f190
            sub __temp_195$0x106f010, __temp_196$0x106f010, i$0x106f190
            mul __temp_195$0x106f010, 0x8:i, __temp_195$0x106f010
            sti 0x200001038:i, __temp_194$0x106f010
            sti 0x200001040:i, __temp_195$0x106f010
            add __temp_199$0x106f010, i$0x106f190, 0xA:i8
            ldelema __temp_197$0x106f010, w$0x10eb6c0, i$0x106f190
            sub __temp_198$0x106f010, __temp_199$0x106f010, i$0x106f190
            mul __temp_198$0x106f010, 0x8:i, __temp_198$0x106f010
            sti 0x200001048:i, __temp_197$0x106f010
            sti 0x200001050:i, __temp_198$0x106f010
            add __temp_202$0x106f010, i$0x106f190, 0xA:i8
            ldelema __temp_200$0x106f010, ci$0x10eb6c0, i$0x106f190
            sub __temp_201$0x106f010, __temp_202$0x106f010, i$0x106f190
            mul __temp_201$0x106f010, 0x8:i, __temp_201$0x106f010
            sti 0x200001058:i, __temp_200$0x106f010
            sti 0x200001060:i, __temp_201$0x106f010
            ldelema __temp_203$0x106f010, cx$0x10eb6c0, 0x0:i8
            sub __temp_204$0x106f010, 0x2:i8, 0x0:i8
            mul __temp_204$0x106f010, 0x8:i, __temp_204$0x106f010
            sti 0x200001068:i, __temp_203$0x106f010
            sti 0x200001070:i, __temp_204$0x106f010
            ldelema __temp_205$0x106f010, cy$0x10eb6c0, 0x0:i8
            sub __temp_206$0x106f010, 0x2:i8, 0x0:i8
            mul __temp_206$0x106f010, 0x8:i, __temp_206$0x106f010
            sti 0x200001078:i, __temp_205$0x106f010
            sti 0x200001080:i, __temp_206$0x106f010
            ldelema __temp_207$0x106f010, cz$0x10eb6c0, 0x0:i8
            sub __temp_208$0x106f010, 0x2:i8, 0x0:i8
            mul __temp_208$0x106f010, 0x8:i, __temp_208$0x106f010
            sti 0x200001088:i, __temp_207$0x106f010
            sti 0x200001090:i, __temp_208$0x106f010
            ldelema __temp_209$0x106f010, cw$0x10eb6c0, 0x0:i8
            sub __temp_210$0x106f010, 0x2:i8, 0x0:i8
            mul __temp_210$0x106f010, 0x8:i, __temp_210$0x106f010
            sti 0x200001098:i, __temp_209$0x106f010
            sti 0x2000010A0:i, __temp_210$0x106f010
            div __temp_213$0x106f010, i$0x106f190, 0xA:i8
            mul __temp_214$0x106f010, __temp_213$0x106f010, 0x200:i8
            div __temp_215$0x106f010, i$0x106f190, 0xA:i8
            add __temp_216$0x106f010, __temp_215$0x106f010, 0x1:i8
            mul __temp_217$0x106f010, __temp_216$0x106f010, 0x200:i8
            ldelema __temp_211$0x106f010, trigger$0x10eb6c0, __temp_214$0x106f010
            sub __temp_212$0x106f010, __temp_217$0x106f010, __temp_214$0x106f010
            mul __temp_212$0x106f010, 0x8:i, __temp_212$0x106f010
            sti 0x2000010A8:i, __temp_211$0x106f010
            sti 0x2000010B0:i, __temp_212$0x106f010
            ldelema __temp_218$0x106f010, lcx$0x10eb6c0, tmp1$0x106f190
            sub __temp_219$0x106f010, tmp2$0x106f190, tmp1$0x106f190
            mul __temp_219$0x106f010, 0x8:i, __temp_219$0x106f010
            sti 0x2000010B8:i, __temp_218$0x106f010
            sti 0x2000010C0:i, __temp_219$0x106f010
            ldelema __temp_220$0x106f010, lcy$0x10eb6c0, tmp1$0x106f190
            sub __temp_221$0x106f010, tmp2$0x106f190, tmp1$0x106f190
            mul __temp_221$0x106f010, 0x8:i, __temp_221$0x106f010
            sti 0x2000010C8:i, __temp_220$0x106f010
            sti 0x2000010D0:i, __temp_221$0x106f010
            ldelema __temp_222$0x106f010, lcz$0x10eb6c0, tmp1$0x106f190
            sub __temp_223$0x106f010, tmp2$0x106f190, tmp1$0x106f190
            mul __temp_223$0x106f010, 0x8:i, __temp_223$0x106f010
            sti 0x2000010D8:i, __temp_222$0x106f010
            sti 0x2000010E0:i, __temp_223$0x106f010
            ldelema __temp_224$0x106f010, lcw$0x10eb6c0, tmp1$0x106f190
            sub __temp_225$0x106f010, tmp2$0x106f190, tmp1$0x106f190
            mul __temp_225$0x106f010, 0x8:i, __temp_225$0x106f010
            sti 0x2000010E8:i, __temp_224$0x106f010
            sti 0x2000010F0:i, __temp_225$0x106f010
            ldelema __temp_226$0x106f010, lcn$0x10eb6c0, tmp1$0x106f190
            sub __temp_227$0x106f010, tmp2$0x106f190, tmp1$0x106f190
            mul __temp_227$0x106f010, 0x8:i, __temp_227$0x106f010
            sti 0x2000010F8:i, __temp_226$0x106f010
            sti 0x200001100:i, __temp_227$0x106f010
            asm "mov $0x0:msq, 0x200001108:msq"
            asm "mov $__newr0:msq, 0x200001110:msq"
            asm "mov $0x200001000:msq, 0x200001118:msq"
            asm "mov $0x200001010:msq, 0x200001120:msq"
            asm "mov $0x200001108:msq, 0x200001128:msq"
            asm "mov $0x200001110:msq, 0x200001130:msq"
            asm "newr 0x200001118, 0x200001120, 0x200001128, 0x200001130"
            ldi __temp_185$0x106f010, 0x100000400:i
            ldi __temp_186$0x106f010, 0x100000408:i
            add __temp_187$0x106f010, __temp_185$0x106f010, __temp_186$0x106f010
            lda __temp_228$0x106f010, recluster_runner$0x10eb6c0
            sub __temp_187$0x106f010, __temp_187$0x106f010, 0x8:i8
            sti __temp_187$0x106f010, __temp_228$0x106f010
            sub __temp_187$0x106f010, __temp_187$0x106f010, 0x8:i8
            sti __temp_187$0x106f010, 0x10:i8
            add __temp_229$0x106f010, i$0x106f190, 0xA:i8
            sub __temp_187$0x106f010, __temp_187$0x106f010, 0x8:i8
            sti __temp_187$0x106f010, __temp_229$0x106f010
            sub __temp_187$0x106f010, __temp_187$0x106f010, 0x8:i8
            sti __temp_187$0x106f010, i$0x106f190
        __temp_176$0x106f190:
            add i$0x106f190, i$0x106f190, 0xA:i8
            br __temp_175$0x106f190
        __temp_177$0x106f190:
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0xa:msq, 0x200001010:msq"
            lda __temp_234$0x106f190, iter$0x10eb6c0
            mov __temp_235$0x106f190, 0x8:i
            sti 0x200001018:i, __temp_234$0x106f190
            sti 0x200001020:i, __temp_235$0x106f190
            ldelema __temp_236$0x106f190, cx$0x10eb6c0, 0x0:i8
            sub __temp_237$0x106f190, 0x2:i8, 0x0:i8
            mul __temp_237$0x106f190, 0x8:i, __temp_237$0x106f190
            sti 0x200001028:i, __temp_236$0x106f190
            sti 0x200001030:i, __temp_237$0x106f190
            ldelema __temp_238$0x106f190, cy$0x10eb6c0, 0x0:i8
            sub __temp_239$0x106f190, 0x2:i8, 0x0:i8
            mul __temp_239$0x106f190, 0x8:i, __temp_239$0x106f190
            sti 0x200001038:i, __temp_238$0x106f190
            sti 0x200001040:i, __temp_239$0x106f190
            ldelema __temp_240$0x106f190, cz$0x10eb6c0, 0x0:i8
            sub __temp_241$0x106f190, 0x2:i8, 0x0:i8
            mul __temp_241$0x106f190, 0x8:i, __temp_241$0x106f190
            sti 0x200001048:i, __temp_240$0x106f190
            sti 0x200001050:i, __temp_241$0x106f190
            ldelema __temp_242$0x106f190, cw$0x10eb6c0, 0x0:i8
            sub __temp_243$0x106f190, 0x2:i8, 0x0:i8
            mul __temp_243$0x106f190, 0x8:i, __temp_243$0x106f190
            sti 0x200001058:i, __temp_242$0x106f190
            sti 0x200001060:i, __temp_243$0x106f190
            add __temp_246$0x106f190, 0x2:i8, 0x200:i8
            mul __temp_247$0x106f190, __temp_246$0x106f190, 0xA:i8
            div __temp_248$0x106f190, __temp_247$0x106f190, 0xA:i8
            ldelema __temp_244$0x106f190, lcx$0x10eb6c0, 0x0:i8
            sub __temp_245$0x106f190, __temp_248$0x106f190, 0x0:i8
            mul __temp_245$0x106f190, 0x8:i, __temp_245$0x106f190
            sti 0x200001068:i, __temp_244$0x106f190
            sti 0x200001070:i, __temp_245$0x106f190
            add __temp_251$0x106f190, 0x2:i8, 0x200:i8
            mul __temp_252$0x106f190, __temp_251$0x106f190, 0xA:i8
            div __temp_253$0x106f190, __temp_252$0x106f190, 0xA:i8
            ldelema __temp_249$0x106f190, lcy$0x10eb6c0, 0x0:i8
            sub __temp_250$0x106f190, __temp_253$0x106f190, 0x0:i8
            mul __temp_250$0x106f190, 0x8:i, __temp_250$0x106f190
            sti 0x200001078:i, __temp_249$0x106f190
            sti 0x200001080:i, __temp_250$0x106f190
            add __temp_256$0x106f190, 0x2:i8, 0x200:i8
            mul __temp_257$0x106f190, __temp_256$0x106f190, 0xA:i8
            div __temp_258$0x106f190, __temp_257$0x106f190, 0xA:i8
            ldelema __temp_254$0x106f190, lcz$0x10eb6c0, 0x0:i8
            sub __temp_255$0x106f190, __temp_258$0x106f190, 0x0:i8
            mul __temp_255$0x106f190, 0x8:i, __temp_255$0x106f190
            sti 0x200001088:i, __temp_254$0x106f190
            sti 0x200001090:i, __temp_255$0x106f190
            add __temp_261$0x106f190, 0x2:i8, 0x200:i8
            mul __temp_262$0x106f190, __temp_261$0x106f190, 0xA:i8
            div __temp_263$0x106f190, __temp_262$0x106f190, 0xA:i8
            ldelema __temp_259$0x106f190, lcw$0x10eb6c0, 0x0:i8
            sub __temp_260$0x106f190, __temp_263$0x106f190, 0x0:i8
            mul __temp_260$0x106f190, 0x8:i, __temp_260$0x106f190
            sti 0x200001098:i, __temp_259$0x106f190
            sti 0x2000010A0:i, __temp_260$0x106f190
            add __temp_266$0x106f190, 0x2:i8, 0x200:i8
            mul __temp_267$0x106f190, __temp_266$0x106f190, 0xA:i8
            div __temp_268$0x106f190, __temp_267$0x106f190, 0xA:i8
            ldelema __temp_264$0x106f190, lcn$0x10eb6c0, 0x0:i8
            sub __temp_265$0x106f190, __temp_268$0x106f190, 0x0:i8
            mul __temp_265$0x106f190, 0x8:i, __temp_265$0x106f190
            sti 0x2000010A8:i, __temp_264$0x106f190
            sti 0x2000010B0:i, __temp_265$0x106f190
            asm "mov $0x1:msq, 0x2000010b8:msq"
            div __temp_271$0x106f190, 0xA:i8, 0xA:i8
            add __temp_272$0x106f190, __temp_271$0x106f190, 0x1:i8
            mul __temp_273$0x106f190, __temp_272$0x106f190, 0x200:i8
            ldelema __temp_269$0x106f190, trigger$0x10eb6c0, 0x0:i8
            sub __temp_270$0x106f190, __temp_273$0x106f190, 0x0:i8
            mul __temp_270$0x106f190, 0x8:i, __temp_270$0x106f190
            sti 0x2000010C0:i, __temp_269$0x106f190
            sti 0x2000010C8:i, __temp_270$0x106f190
            asm "mov $__newr0:msq, 0x2000010d0:msq"
            asm "mov $0x200001000:msq, 0x2000010d8:msq"
            asm "mov $0x200001010:msq, 0x2000010e0:msq"
            asm "mov $0x2000010b8:msq, 0x2000010e8:msq"
            asm "mov $0x2000010d0:msq, 0x2000010f0:msq"
            asm "newr 0x2000010d8, 0x2000010e0, 0x2000010e8, 0x2000010f0"
            ldi __temp_231$0x106f190, 0x100000400:i
            ldi __temp_232$0x106f190, 0x100000408:i
            add __temp_233$0x106f190, __temp_231$0x106f190, __temp_232$0x106f190
            lda __temp_274$0x106f190, on_recluster_finished$0x10eb6c0
            sub __temp_233$0x106f190, __temp_233$0x106f190, 0x8:i8
            sti __temp_233$0x106f190, __temp_274$0x106f190
            sub __temp_233$0x106f190, __temp_233$0x106f190, 0x8:i8
            sti __temp_233$0x106f190, 0x8:i8
            sub __temp_233$0x106f190, __temp_233$0x106f190, 0x8:i8
            sti __temp_233$0x106f190, iter$0x10eb6c0
            ret
    }
    function recluster_runner
    {
            div partid$0x1038f80, start$0x1038ee0, 0xA:i8
            mul __temp_100$0x1038f80, 0x202:i8, partid$0x1038f80
            ldelema mylcx$0x1038f80, lcx$0x10eb6c0, __temp_100$0x1038f80
            mul __temp_102$0x1038f80, 0x202:i8, partid$0x1038f80
            ldelema mylcy$0x1038f80, lcy$0x10eb6c0, __temp_102$0x1038f80
            mul __temp_104$0x1038f80, 0x202:i8, partid$0x1038f80
            ldelema mylcz$0x1038f80, lcz$0x10eb6c0, __temp_104$0x1038f80
            mul __temp_106$0x1038f80, 0x202:i8, partid$0x1038f80
            ldelema mylcw$0x1038f80, lcw$0x10eb6c0, __temp_106$0x1038f80
            mul __temp_108$0x1038f80, 0x202:i8, partid$0x1038f80
            ldelema mylcn$0x1038f80, lcn$0x10eb6c0, __temp_108$0x1038f80
            mov i$0x1038f80, 0x0:i8
        __temp_109$0x1038f80:
            ble 0x2:i8, i$0x1038f80, __temp_111$0x1038f80
            stelem mylcx$0x1038f80, i$0x1038f80, 0x0:i8
            stelem mylcy$0x1038f80, i$0x1038f80, 0x0:i8
            stelem mylcz$0x1038f80, i$0x1038f80, 0x0:i8
            stelem mylcw$0x1038f80, i$0x1038f80, 0x0:i8
            stelem mylcn$0x1038f80, i$0x1038f80, 0x0:i8
        __temp_110$0x1038f80:
            add i$0x1038f80, i$0x1038f80, 0x1:i8
            br __temp_109$0x1038f80
        __temp_111$0x1038f80:
            mov i$0x1038f80, start$0x1038ee0
        __temp_114$0x1038f80:
            ble end$0x1038ee0, i$0x1038f80, __temp_116$0x1038f80
            ldelem xt$0x1038f80, x$0x10eb6c0, i$0x1038f80
            ldelem yt$0x1038f80, y$0x10eb6c0, i$0x1038f80
            ldelem zt$0x1038f80, z$0x10eb6c0, i$0x1038f80
            ldelem wt$0x1038f80, w$0x10eb6c0, i$0x1038f80
            mov j$0x1038f80, 0x0:i8
            ldelem __temp_122$0x103c990, cx$0x10eb6c0, j$0x1038f80
            sub reg1$0x10eb6c0, xt$0x1038f80, __temp_122$0x103c990
            ldelem __temp_124$0x103c990, cy$0x10eb6c0, j$0x1038f80
            sub reg2$0x10eb6c0, yt$0x1038f80, __temp_124$0x103c990
            ldelem __temp_126$0x103c990, cz$0x10eb6c0, j$0x1038f80
            sub reg3$0x10eb6c0, zt$0x1038f80, __temp_126$0x103c990
            ldelem __temp_128$0x103c990, cw$0x10eb6c0, j$0x1038f80
            sub reg4$0x10eb6c0, wt$0x1038f80, __temp_128$0x103c990
            mul __temp_130$0x103c990, reg1$0x10eb6c0, reg1$0x10eb6c0
            mul __temp_131$0x103c990, reg2$0x10eb6c0, reg2$0x10eb6c0
            add __temp_132$0x103c990, __temp_130$0x103c990, __temp_131$0x103c990
            mul __temp_133$0x103c990, reg3$0x10eb6c0, reg3$0x10eb6c0
            add __temp_134$0x103c990, __temp_132$0x103c990, __temp_133$0x103c990
            mul __temp_135$0x103c990, reg4$0x10eb6c0, reg4$0x10eb6c0
            add __temp_136$0x103c990, __temp_134$0x103c990, __temp_135$0x103c990
            lda __temp_137$0x103c990, d$0x1038f80
            sti __temp_137$0x103c990, __temp_136$0x103c990
            mov mind$0x1038f80, d$0x1038f80
            mov mini$0x1038f80, j$0x1038f80
            mov j$0x1038f80, 0x1:i8
        __temp_138$0x103c990:
            ble 0x2:i8, j$0x1038f80, __temp_140$0x103c990
            ldelem __temp_142$0x103ca30, cx$0x10eb6c0, j$0x1038f80
            sub reg1$0x10eb6c0, xt$0x1038f80, __temp_142$0x103ca30
            ldelem __temp_144$0x103ca30, cy$0x10eb6c0, j$0x1038f80
            sub reg2$0x10eb6c0, yt$0x1038f80, __temp_144$0x103ca30
            ldelem __temp_146$0x103ca30, cz$0x10eb6c0, j$0x1038f80
            sub reg3$0x10eb6c0, zt$0x1038f80, __temp_146$0x103ca30
            ldelem __temp_148$0x103ca30, cw$0x10eb6c0, j$0x1038f80
            sub reg4$0x10eb6c0, wt$0x1038f80, __temp_148$0x103ca30
            mul __temp_150$0x103ca30, reg1$0x10eb6c0, reg1$0x10eb6c0
            mul __temp_151$0x103ca30, reg2$0x10eb6c0, reg2$0x10eb6c0
            add __temp_152$0x103ca30, __temp_150$0x103ca30, __temp_151$0x103ca30
            mul __temp_153$0x103ca30, reg3$0x10eb6c0, reg3$0x10eb6c0
            add __temp_154$0x103ca30, __temp_152$0x103ca30, __temp_153$0x103ca30
            mul __temp_155$0x103ca30, reg4$0x10eb6c0, reg4$0x10eb6c0
            add __temp_156$0x103ca30, __temp_154$0x103ca30, __temp_155$0x103ca30
            lda __temp_157$0x103ca30, d$0x1038f80
            sti __temp_157$0x103ca30, __temp_156$0x103ca30
            blt d$0x1038f80, mind$0x1038f80, __temp_160$0x103ca30
            br __temp_158$0x103ca30
        __temp_160$0x103ca30:
            mov mind$0x1038f80, d$0x1038f80
            mov mini$0x1038f80, j$0x1038f80
        __temp_158$0x103ca30:
        __temp_139$0x103c990:
            add j$0x1038f80, j$0x1038f80, 0x1:i8
            br __temp_138$0x103c990
        __temp_140$0x103c990:
            ldelem __temp_162$0x103c990, mylcn$0x1038f80, mini$0x1038f80
            add __temp_163$0x103c990, __temp_162$0x103c990, 0x1:i8
            stelem mylcn$0x1038f80, mini$0x1038f80, __temp_163$0x103c990
            ldelem __temp_164$0x103c990, mylcx$0x1038f80, mini$0x1038f80
            add __temp_165$0x103c990, __temp_164$0x103c990, xt$0x1038f80
            stelem mylcx$0x1038f80, mini$0x1038f80, __temp_165$0x103c990
            ldelem __temp_166$0x103c990, mylcy$0x1038f80, mini$0x1038f80
            add __temp_167$0x103c990, __temp_166$0x103c990, yt$0x1038f80
            stelem mylcy$0x1038f80, mini$0x1038f80, __temp_167$0x103c990
            ldelem __temp_168$0x103c990, mylcz$0x1038f80, mini$0x1038f80
            add __temp_169$0x103c990, __temp_168$0x103c990, zt$0x1038f80
            stelem mylcz$0x1038f80, mini$0x1038f80, __temp_169$0x103c990
            ldelem __temp_170$0x103c990, mylcw$0x1038f80, mini$0x1038f80
            add __temp_171$0x103c990, __temp_170$0x103c990, wt$0x1038f80
            stelem mylcw$0x1038f80, mini$0x1038f80, __temp_171$0x103c990
        __temp_115$0x1038f80:
            add i$0x1038f80, i$0x1038f80, 0x1:i8
            br __temp_114$0x1038f80
        __temp_116$0x1038f80:
            div __temp_173$0x1038f80, start$0x1038ee0, 0xA:i8
            mul __temp_174$0x1038f80, __temp_173$0x1038f80, 0x200:i8
            stelem trigger$0x10eb6c0, __temp_174$0x1038f80, 0x2:i8
            asm "exit:cd"
    }
    function on_recluster_finished
    {
            clt __temp_19$0xff1a20, expected_iter$0xff1980, iter$0x10eb6c0
            bnz __temp_19$0xff1a20, __temp_20$0xff1a20
            br __temp_18$0xff1a20
        __temp_20$0xff1a20:
            asm "exit:ad"
        __temp_18$0xff1a20:
            blt iter$0x10eb6c0, expected_iter$0xff1980, __temp_23$0xff1a20
            br __temp_21$0xff1a20
        __temp_23$0xff1a20:
            asm "exit:a"
        __temp_21$0xff1a20:
            mov i$0xff1a20, 0x0:i8
        __temp_24$0xff1a20:
            ble 0x200:i8, i$0xff1a20, __temp_26$0xff1a20
            ldelem __temp_29$0xff21d0, trigger$0x10eb6c0, i$0xff1a20
            bne __temp_29$0xff21d0, 0x2:i8, __temp_31$0xff21d0
            br __temp_28$0xff21d0
        __temp_31$0xff21d0:
            asm "exit:a"
        __temp_28$0xff21d0:
        __temp_25$0xff1a20:
            add i$0xff1a20, i$0xff1a20, 0x200:i8
            br __temp_24$0xff1a20
        __temp_26$0xff1a20:
            mov sumx$0xff1a20, 0x300000000:i
            mov sumy$0xff1a20, 0x300000010:i
            mov sumz$0xff1a20, 0x300000020:i
            mov sumw$0xff1a20, 0x300000030:i
            mov npt$0xff1a20, 0x300000040:i
            mov i$0xff1a20, 0x0:i8
        __temp_33$0xff1a20:
            ble 0x2:i8, i$0xff1a20, __temp_35$0xff1a20
            stelem sumx$0xff1a20, i$0xff1a20, 0x0:i8
            stelem sumy$0xff1a20, i$0xff1a20, 0x0:i8
            stelem sumz$0xff1a20, i$0xff1a20, 0x0:i8
            stelem sumw$0xff1a20, i$0xff1a20, 0x0:i8
            stelem npt$0xff1a20, i$0xff1a20, 0x0:i8
        __temp_34$0xff1a20:
            add i$0xff1a20, i$0xff1a20, 0x1:i8
            br __temp_33$0xff1a20
        __temp_35$0xff1a20:
            mov n_parts$0xff1a20, 0x1:i8
            mov j$0xff1a20, 0x0:i8
        __temp_38$0xff1a20:
            ble n_parts$0xff1a20, j$0xff1a20, __temp_40$0xff1a20
            mul __temp_43$0x1005e60, 0x202:i8, j$0xff1a20
            ldelema tlcx$0xff1a20, lcx$0x10eb6c0, __temp_43$0x1005e60
            mul __temp_45$0x1005e60, 0x202:i8, j$0xff1a20
            ldelema tlcy$0xff1a20, lcy$0x10eb6c0, __temp_45$0x1005e60
            mul __temp_47$0x1005e60, 0x202:i8, j$0xff1a20
            ldelema tlcz$0xff1a20, lcz$0x10eb6c0, __temp_47$0x1005e60
            mul __temp_49$0x1005e60, 0x202:i8, j$0xff1a20
            ldelema tlcw$0xff1a20, lcw$0x10eb6c0, __temp_49$0x1005e60
            mul __temp_51$0x1005e60, 0x202:i8, j$0xff1a20
            ldelema tlcn$0xff1a20, lcn$0x10eb6c0, __temp_51$0x1005e60
            mov i$0xff1a20, 0x0:i8
        __temp_52$0x1005e60:
            ble 0x2:i8, i$0xff1a20, __temp_54$0x1005e60
            ldelem __temp_56$0x1005ee0, sumx$0xff1a20, i$0xff1a20
            ldelem __temp_57$0x1005ee0, tlcx$0xff1a20, i$0xff1a20
            add __temp_58$0x1005ee0, __temp_56$0x1005ee0, __temp_57$0x1005ee0
            stelem sumx$0xff1a20, i$0xff1a20, __temp_58$0x1005ee0
            ldelem __temp_59$0x1005ee0, sumy$0xff1a20, i$0xff1a20
            ldelem __temp_60$0x1005ee0, tlcy$0xff1a20, i$0xff1a20
            add __temp_61$0x1005ee0, __temp_59$0x1005ee0, __temp_60$0x1005ee0
            stelem sumy$0xff1a20, i$0xff1a20, __temp_61$0x1005ee0
            ldelem __temp_62$0x1005ee0, sumz$0xff1a20, i$0xff1a20
            ldelem __temp_63$0x1005ee0, tlcz$0xff1a20, i$0xff1a20
            add __temp_64$0x1005ee0, __temp_62$0x1005ee0, __temp_63$0x1005ee0
            stelem sumz$0xff1a20, i$0xff1a20, __temp_64$0x1005ee0
            ldelem __temp_65$0x1005ee0, sumw$0xff1a20, i$0xff1a20
            ldelem __temp_66$0x1005ee0, tlcw$0xff1a20, i$0xff1a20
            add __temp_67$0x1005ee0, __temp_65$0x1005ee0, __temp_66$0x1005ee0
            stelem sumw$0xff1a20, i$0xff1a20, __temp_67$0x1005ee0
            ldelem __temp_68$0x1005ee0, npt$0xff1a20, i$0xff1a20
            ldelem __temp_69$0x1005ee0, tlcn$0xff1a20, i$0xff1a20
            add __temp_70$0x1005ee0, __temp_68$0x1005ee0, __temp_69$0x1005ee0
            stelem npt$0xff1a20, i$0xff1a20, __temp_70$0x1005ee0
        __temp_53$0x1005e60:
            add i$0xff1a20, i$0xff1a20, 0x1:i8
            br __temp_52$0x1005e60
        __temp_54$0x1005e60:
        __temp_39$0xff1a20:
            add j$0xff1a20, j$0xff1a20, 0x1:i8
            br __temp_38$0xff1a20
        __temp_40$0xff1a20:
            mov i$0xff1a20, 0x0:i8
        __temp_73$0xff1a20:
            ble 0x2:i8, i$0xff1a20, __temp_75$0xff1a20
            ldelem __temp_78$0x1017010, npt$0xff1a20, i$0xff1a20
            bne __temp_78$0x1017010, 0x0:i8, __temp_80$0x1017010
            stelem cx$0x10eb6c0, i$0xff1a20, 0x7FFFFFFFFFFFFFF:i8
            stelem cy$0x10eb6c0, i$0xff1a20, 0x7FFFFFFFFFFFFFF:i8
            stelem cz$0x10eb6c0, i$0xff1a20, 0x7FFFFFFFFFFFFFF:i8
            stelem cw$0x10eb6c0, i$0xff1a20, 0x7FFFFFFFFFFFFFF:i8
            br __temp_77$0x1017010
        __temp_80$0x1017010:
            ldelem __temp_81$0x10170b0, sumx$0xff1a20, i$0xff1a20
            ldelem __temp_82$0x10170b0, npt$0xff1a20, i$0xff1a20
            div __temp_83$0x10170b0, __temp_81$0x10170b0, __temp_82$0x10170b0
            stelem cx$0x10eb6c0, i$0xff1a20, __temp_83$0x10170b0
            ldelem __temp_84$0x10170b0, sumy$0xff1a20, i$0xff1a20
            ldelem __temp_85$0x10170b0, npt$0xff1a20, i$0xff1a20
            div __temp_86$0x10170b0, __temp_84$0x10170b0, __temp_85$0x10170b0
            stelem cy$0x10eb6c0, i$0xff1a20, __temp_86$0x10170b0
            ldelem __temp_87$0x10170b0, sumz$0xff1a20, i$0xff1a20
            ldelem __temp_88$0x10170b0, npt$0xff1a20, i$0xff1a20
            div __temp_89$0x10170b0, __temp_87$0x10170b0, __temp_88$0x10170b0
            stelem cz$0x10eb6c0, i$0xff1a20, __temp_89$0x10170b0
            ldelem __temp_90$0x10170b0, sumw$0xff1a20, i$0xff1a20
            ldelem __temp_91$0x10170b0, npt$0xff1a20, i$0xff1a20
            div __temp_92$0x10170b0, __temp_90$0x10170b0, __temp_91$0x10170b0
            stelem cw$0x10eb6c0, i$0xff1a20, __temp_92$0x10170b0
        __temp_77$0x1017010:
        __temp_74$0xff1a20:
            add i$0xff1a20, i$0xff1a20, 0x1:i8
            br __temp_73$0xff1a20
        __temp_75$0xff1a20:
            call output_char$0x10eb6c0, <missing>, 0x69:i1
            call output_char$0x10eb6c0, <missing>, 0x74:i1
            call output_char$0x10eb6c0, <missing>, 0x65:i1
            call output_char$0x10eb6c0, <missing>, 0x72:i1
            call output_char$0x10eb6c0, <missing>, 0x3A:i1
            call output_q$0x10eb6c0, <missing>, iter$0x10eb6c0
            call output_char$0x10eb6c0, <missing>, 0xA:i8
            add iter$0x10eb6c0, iter$0x10eb6c0, 0x1:i8
            blt iter$0x10eb6c0, 0x6:i8, __temp_97$0xff1a20
            call kmeans_finish$0x10eb6c0, <missing>
            br __temp_95$0xff1a20
        __temp_97$0xff1a20:
            call start_iteration$0x10eb6c0, <missing>
        __temp_95$0xff1a20:
            asm "exit:cd"
    }
    function output_char
    {
            sti 0x100000208:i, c$0x11c57e0
            ret
    }
    function output_q
    {
            mov num$0x11c6a00, n$0x11c6960
            blt n$0x11c6960, 0x0:i8, __temp_251$0x11c6a00
            br __temp_249$0x11c6a00
        __temp_251$0x11c6a00:
            sub num$0x11c6a00, 0x0:i8, n$0x11c6960
            conv __temp_253$0x11c6aa0, 0x2D:i1
            call output_char$0x10eb6c0, <missing>, __temp_253$0x11c6aa0
        __temp_249$0x11c6a00:
            mov num2$0x11c6a00, 0x0:i8
            mov count$0x11c6a00, 0x0:i8
        output_q_j1$0x10eb6c0:
            div __temp_254$0x11c6a00, num$0x11c6a00, 0xA:i8
            mul __temp_255$0x11c6a00, __temp_254$0x11c6a00, 0xA:i8
            sub c$0x11c6a00, num$0x11c6a00, __temp_255$0x11c6a00
            div num$0x11c6a00, num$0x11c6a00, 0xA:i8
            mul num2$0x11c6a00, num2$0x11c6a00, 0xA:i8
            add num2$0x11c6a00, num2$0x11c6a00, c$0x11c6a00
            add count$0x11c6a00, count$0x11c6a00, 0x1:i8
            blt 0x0:i8, num$0x11c6a00, __temp_263$0x11c6a00
            br __temp_261$0x11c6a00
        __temp_263$0x11c6a00:
            br output_q_j1$0x11c8220
        __temp_261$0x11c6a00:
            mov num$0x11c6a00, 0x0:i8
        output_q_j2$0x10eb6c0:
            div __temp_264$0x11c6a00, num2$0x11c6a00, 0xA:i8
            mul __temp_265$0x11c6a00, __temp_264$0x11c6a00, 0xA:i8
            sub c$0x11c6a00, num2$0x11c6a00, __temp_265$0x11c6a00
            div num2$0x11c6a00, num2$0x11c6a00, 0xA:i8
            add c$0x11c6a00, c$0x11c6a00, 0x30:i8
            call output_char$0x10eb6c0, <missing>, c$0x11c6a00
            add num$0x11c6a00, num$0x11c6a00, 0x1:i8
            blt num$0x11c6a00, count$0x11c6a00, __temp_272$0x11c6a00
            br __temp_270$0x11c6a00
        __temp_272$0x11c6a00:
            br output_q_j2$0x11c85a0
        __temp_270$0x11c6a00:
            ret
    }
    function kmeans_finish
    {
            call output_centroids$0x10eb6c0, <missing>
            ret
    }
    function output_centroids
    {
            call _output_centroids$0x10eb6c0, <missing>, 0x0:i8
            ret
    }
    function _output_centroids
    {
            mov npt$0xfe6860, 0x300000040:i
            call output_q$0x10eb6c0, <missing>, 0x2:i8
            call output_char$0x10eb6c0, <missing>, 0x20:i1
            call output_char$0x10eb6c0, <missing>, 0x63:i1
            call output_char$0x10eb6c0, <missing>, 0x65:i1
            call output_char$0x10eb6c0, <missing>, 0x6E:i1
            call output_char$0x10eb6c0, <missing>, 0x74:i1
            call output_char$0x10eb6c0, <missing>, 0x72:i1
            call output_char$0x10eb6c0, <missing>, 0x6F:i1
            call output_char$0x10eb6c0, <missing>, 0x69:i1
            call output_char$0x10eb6c0, <missing>, 0x64:i1
            call output_char$0x10eb6c0, <missing>, 0x73:i1
            call output_char$0x10eb6c0, <missing>, 0x3A:i1
            call output_char$0x10eb6c0, <missing>, 0xA:i8
            mov i$0xfe6860, 0x0:i8
        __temp_5$0xfe6860:
            ble 0x2:i8, i$0xfe6860, __temp_7$0xfe6860
            ldelem __temp_9$0xfe6900, cx$0x10eb6c0, i$0xfe6860
            call output_q$0x10eb6c0, <missing>, __temp_9$0xfe6900
            call output_char$0x10eb6c0, <missing>, 0x20:i1
            ldelem __temp_10$0xfe6900, cy$0x10eb6c0, i$0xfe6860
            call output_q$0x10eb6c0, <missing>, __temp_10$0xfe6900
            call output_char$0x10eb6c0, <missing>, 0x20:i1
            ldelem __temp_11$0xfe6900, cz$0x10eb6c0, i$0xfe6860
            call output_q$0x10eb6c0, <missing>, __temp_11$0xfe6900
            call output_char$0x10eb6c0, <missing>, 0x20:i1
            ldelem __temp_12$0xfe6900, cw$0x10eb6c0, i$0xfe6860
            call output_q$0x10eb6c0, <missing>, __temp_12$0xfe6900
            beq with_point_num$0xfe67c0, 0x1:i8, __temp_15$0xfe6900
            br __temp_13$0xfe6900
        __temp_15$0xfe6900:
            call output_char$0x10eb6c0, <missing>, 0x2F:i1
            ldelem __temp_16$0xfe69a0, npt$0xfe6860, i$0xfe6860
            call output_q$0x10eb6c0, <missing>, __temp_16$0xfe69a0
        __temp_13$0xfe6900:
            call output_char$0x10eb6c0, <missing>, 0xA:i8
        __temp_6$0xfe6860:
            add i$0xfe6860, i$0xfe6860, 0x1:i8
            br __temp_5$0xfe6860
        __temp_7$0xfe6860:
            call output_char$0x10eb6c0, <missing>, 0xA:i8
            ret
    }
}
