class Program
{
    function main
    {
            mov space$0x1eb0550, 0x0:i8
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0xa:msq, 0x200001010:msq"
            lda __temp_420$0x1eb0550, iter$0x1ef28a0
            mov __temp_421$0x1eb0550, 0x8:i
            sti 0x200001018:i, __temp_420$0x1eb0550
            sti 0x200001020:i, __temp_421$0x1eb0550
            lda __temp_422$0x1eb0550, num_tasks$0x1ef28a0
            mov __temp_423$0x1eb0550, 0x8:i
            sti 0x200001028:i, __temp_422$0x1eb0550
            sti 0x200001030:i, __temp_423$0x1eb0550
            lda __temp_424$0x1eb0550, vertices_cnt$0x1ef28a0
            mov __temp_425$0x1eb0550, 0x8:i
            sti 0x200001038:i, __temp_424$0x1eb0550
            sti 0x200001040:i, __temp_425$0x1eb0550
            lda __temp_426$0x1eb0550, vertices$0x1ef28a0
            mov __temp_427$0x1eb0550, 0x8:i
            sti 0x200001048:i, __temp_426$0x1eb0550
            sti 0x200001050:i, __temp_427$0x1eb0550
            lda __temp_428$0x1eb0550, in_neighbors$0x1ef28a0
            mov __temp_429$0x1eb0550, 0x8:i
            sti 0x200001058:i, __temp_428$0x1eb0550
            sti 0x200001060:i, __temp_429$0x1eb0550
            lda __temp_430$0x1eb0550, begin_time_sec$0x1ef28a0
            mov __temp_431$0x1eb0550, 0x8:i
            sti 0x200001068:i, __temp_430$0x1eb0550
            sti 0x200001070:i, __temp_431$0x1eb0550
            lda __temp_432$0x1eb0550, begin_time_nsec$0x1ef28a0
            mov __temp_433$0x1eb0550, 0x8:i
            sti 0x200001078:i, __temp_432$0x1eb0550
            sti 0x200001080:i, __temp_433$0x1eb0550
            add __temp_436$0x1eb0550, 0x800000000:i8, 0x20000000000:i8
            sub __temp_437$0x1eb0550, __temp_436$0x1eb0550, 0x1:i8
            add __temp_438$0x1eb0550, __temp_437$0x1eb0550, 0x1:i8
            add __temp_439$0x1eb0550, __temp_438$0x1eb0550, 0x20000000000:i8
            sub __temp_440$0x1eb0550, __temp_439$0x1eb0550, 0x1:i8
            add __temp_441$0x1eb0550, __temp_440$0x1eb0550, 0x1:i8
            mul __temp_442$0x1eb0550, 0x400:i8, 0x400:i8
            mul __temp_443$0x1eb0550, __temp_442$0x1eb0550, 0x46:i8
            mul __temp_444$0x1eb0550, __temp_443$0x1eb0550, 0x2:i8
            mul __temp_445$0x1eb0550, __temp_444$0x1eb0550, 0x8:i8
            add __temp_446$0x1eb0550, __temp_441$0x1eb0550, __temp_445$0x1eb0550
            conv __temp_447$0x1eb0550, __temp_446$0x1eb0550
            mul __temp_448$0x1eb0550, 0x400:i8, 0x400:i8
            mul __temp_449$0x1eb0550, __temp_448$0x1eb0550, 0x5:i8
            mul __temp_450$0x1eb0550, __temp_449$0x1eb0550, 0x3:i8
            ldelema __temp_434$0x1eb0550, __temp_447$0x1eb0550, 0x0:i8
            sub __temp_435$0x1eb0550, __temp_450$0x1eb0550, 0x0:i8
            mul __temp_435$0x1eb0550, 0x8:i, __temp_435$0x1eb0550
            sti 0x200001088:i, __temp_434$0x1eb0550
            sti 0x200001090:i, __temp_435$0x1eb0550
            add __temp_453$0x1eb0550, 0x800000000:i8, 0x20000000000:i8
            sub __temp_454$0x1eb0550, __temp_453$0x1eb0550, 0x1:i8
            add __temp_455$0x1eb0550, __temp_454$0x1eb0550, 0x1:i8
            add __temp_456$0x1eb0550, __temp_455$0x1eb0550, 0x20000000000:i8
            sub __temp_457$0x1eb0550, __temp_456$0x1eb0550, 0x1:i8
            add __temp_458$0x1eb0550, __temp_457$0x1eb0550, 0x1:i8
            mul __temp_459$0x1eb0550, 0x400:i8, 0x400:i8
            mul __temp_460$0x1eb0550, __temp_459$0x1eb0550, 0x46:i8
            mul __temp_461$0x1eb0550, __temp_460$0x1eb0550, 0x2:i8
            mul __temp_462$0x1eb0550, __temp_461$0x1eb0550, 0x8:i8
            add __temp_463$0x1eb0550, __temp_458$0x1eb0550, __temp_462$0x1eb0550
            mul __temp_464$0x1eb0550, 0x400:i8, 0x400:i8
            mul __temp_465$0x1eb0550, __temp_464$0x1eb0550, 0x5:i8
            mul __temp_466$0x1eb0550, __temp_465$0x1eb0550, 0x3:i8
            mul __temp_467$0x1eb0550, __temp_466$0x1eb0550, 0x8:i8
            add __temp_468$0x1eb0550, __temp_463$0x1eb0550, __temp_467$0x1eb0550
            conv __temp_469$0x1eb0550, __temp_468$0x1eb0550
            mul __temp_470$0x1eb0550, 0x400:i8, 0x400:i8
            mul __temp_471$0x1eb0550, __temp_470$0x1eb0550, 0x46:i8
            mul __temp_472$0x1eb0550, __temp_471$0x1eb0550, 0x2:i8
            div __temp_473$0x1eb0550, __temp_472$0x1eb0550, 0x2:i8
            add __temp_474$0x1eb0550, __temp_473$0x1eb0550, 0x1:i8
            ldelema __temp_451$0x1eb0550, __temp_469$0x1eb0550, 0x0:i8
            sub __temp_452$0x1eb0550, __temp_474$0x1eb0550, 0x0:i8
            mul __temp_452$0x1eb0550, 0x8:i, __temp_452$0x1eb0550
            sti 0x200001098:i, __temp_451$0x1eb0550
            sti 0x2000010A0:i, __temp_452$0x1eb0550
            mul __temp_477$0x1eb0550, 0x40:i8, 0x4:i8
            ldelema __temp_475$0x1eb0550, partitions$0x1ef28a0, 0x0:i8
            sub __temp_476$0x1eb0550, __temp_477$0x1eb0550, 0x0:i8
            mul __temp_476$0x1eb0550, 0x8:i, __temp_476$0x1eb0550
            sti 0x2000010A8:i, __temp_475$0x1eb0550
            sti 0x2000010B0:i, __temp_476$0x1eb0550
            asm "mov $0x0:msq, 0x2000010b8:msq"
            asm "mov $__newr0:msq, 0x2000010c0:msq"
            mov __temp_478$0x1eb0550, space$0x1eb0550
            sti 0x2000010C8:i, __temp_478$0x1eb0550
            asm "mov $0x200001000:msq, 0x2000010d0:msq"
            asm "mov $0x200001010:msq, 0x2000010d8:msq"
            asm "mov $0x2000010b8:msq, 0x2000010e0:msq"
            asm "mov $0x2000010c0:msq, 0x2000010e8:msq"
            asm "mov $0x2000010c8:msq, 0x2000010f0:msq"
            asm "spawnx 0x2000010d0, 0x2000010d8, 0x2000010e0, 0x2000010e8, 0x2000010f0"
            ldi __temp_417$0x1eb0550, 0x100000400:i
            ldi __temp_418$0x1eb0550, 0x100000408:i
            add __temp_419$0x1eb0550, __temp_417$0x1eb0550, __temp_418$0x1eb0550
            lda __temp_479$0x1eb0550, init_task$0x1ef28a0
            sub __temp_419$0x1eb0550, __temp_419$0x1eb0550, 0x8:i8
            sti __temp_419$0x1eb0550, __temp_479$0x1eb0550
            sub __temp_419$0x1eb0550, __temp_419$0x1eb0550, 0x8:i8
            sti __temp_419$0x1eb0550, 0x0:i8
            asm "exit:c"
    }
    function init_task
    {
            lda __temp_414$0x1ea4000, begin_time_sec$0x1ef28a0
            lda __temp_415$0x1ea4000, begin_time_nsec$0x1ef28a0
            call gettime$0x1ef28a0, __temp_413$0x1ea4000, __temp_414$0x1ea4000, __temp_415$0x1ea4000
            mov i$0x1ea4000, __temp_413$0x1ea4000
            ldi vertices_cnt$0x1ef28a0, 0x40846000000:i
            call output_char$0x1ef28a0, <missing>, 0x76:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x72:i1
            call output_char$0x1ef28a0, <missing>, 0x74:i1
            call output_char$0x1ef28a0, <missing>, 0x69:i1
            call output_char$0x1ef28a0, <missing>, 0x63:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x73:i1
            call output_char$0x1ef28a0, <missing>, 0x5F:i1
            call output_char$0x1ef28a0, <missing>, 0x63:i1
            call output_char$0x1ef28a0, <missing>, 0x6E:i1
            call output_char$0x1ef28a0, <missing>, 0x74:i1
            call output_char$0x1ef28a0, <missing>, 0x3A:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_q$0x1ef28a0, <missing>, vertices_cnt$0x1ef28a0
            call output_char$0x1ef28a0, <missing>, 0xA:i8
            mov vertices$0x1ef28a0, 0x40846000008:i
            mov in_neighbors$0x1ef28a0, 0x4084D800000:i
            mov iter$0x1ef28a0, 0x0:i8
            mov num_tasks$0x1ef28a0, 0x1E:i8
            call build_partitions$0x1ef28a0, <missing>
            call create_new_iter_task$0x1ef28a0, <missing>
            asm "exit:c"
    }
    function gettime
    {
            sti 0x100000420:i, 0x7:i8
            asm "int 0x80"
            ldi ret$0x200fe00, 0x100001000:i
            ldi __temp_695$0x200fe00, 0x100001008:i
            sti tv_sec$0x200fd60, __temp_695$0x200fe00
            ldi __temp_696$0x200fe00, 0x100001010:i
            sti tv_nsec$0x200fd60, __temp_696$0x200fe00
            ret ret$0x200fe00
    }
    function output_char
    {
            sti 0x100000208:i, c$0x1fc98e0
            ret
    }
    function output_q
    {
            mov num$0x1fcabc0, n$0x1fcaad0
            blt n$0x1fcaad0, 0x0:i8, __temp_251$0x1fcabc0
            br __temp_249$0x1fcabc0
        __temp_251$0x1fcabc0:
            sub num$0x1fcabc0, 0x0:i8, n$0x1fcaad0
            conv __temp_253$0x1fca9a0, 0x2D:i1
            call output_char$0x1ef28a0, <missing>, __temp_253$0x1fca9a0
        __temp_249$0x1fcabc0:
            mov num2$0x1fcabc0, 0x0:i8
            mov count$0x1fcabc0, 0x0:i8
        output_q_j1$0x1ef28a0:
            div __temp_254$0x1fcabc0, num$0x1fcabc0, 0xA:i8
            mul __temp_255$0x1fcabc0, __temp_254$0x1fcabc0, 0xA:i8
            sub c$0x1fcabc0, num$0x1fcabc0, __temp_255$0x1fcabc0
            div num$0x1fcabc0, num$0x1fcabc0, 0xA:i8
            mul num2$0x1fcabc0, num2$0x1fcabc0, 0xA:i8
            add num2$0x1fcabc0, num2$0x1fcabc0, c$0x1fcabc0
            add count$0x1fcabc0, count$0x1fcabc0, 0x1:i8
            blt 0x0:i8, num$0x1fcabc0, __temp_263$0x1fcabc0
            br __temp_261$0x1fcabc0
        __temp_263$0x1fcabc0:
            br output_q_j1$0x1fcc460
        __temp_261$0x1fcabc0:
            mov num$0x1fcabc0, 0x0:i8
        output_q_j2$0x1ef28a0:
            div __temp_264$0x1fcabc0, num2$0x1fcabc0, 0xA:i8
            mul __temp_265$0x1fcabc0, __temp_264$0x1fcabc0, 0xA:i8
            sub c$0x1fcabc0, num2$0x1fcabc0, __temp_265$0x1fcabc0
            div num2$0x1fcabc0, num2$0x1fcabc0, 0xA:i8
            add c$0x1fcabc0, c$0x1fcabc0, 0x30:i8
            call output_char$0x1ef28a0, <missing>, c$0x1fcabc0
            add num$0x1fcabc0, num$0x1fcabc0, 0x1:i8
            blt num$0x1fcabc0, count$0x1fcabc0, __temp_272$0x1fcabc0
            br __temp_270$0x1fcabc0
        __temp_272$0x1fcabc0:
            br output_q_j2$0x1fcc7c0
        __temp_270$0x1fcabc0:
            ret
    }
    function build_partitions
    {
            stelem cnt$0x1e17f10, 0x0:i8, 0x4200:i8
            stelem cnt$0x1e17f10, 0x1:i8, 0x4200:i8
            stelem cnt$0x1e17f10, 0x2:i8, 0x7000:i8
            stelem cnt$0x1e17f10, 0x3:i8, 0x5C00:i8
            stelem cnt$0x1e17f10, 0x4:i8, 0xA000:i8
            stelem cnt$0x1e17f10, 0x5:i8, 0xA000:i8
            stelem cnt$0x1e17f10, 0x6:i8, 0xC800:i8
            stelem cnt$0x1e17f10, 0x7:i8, 0xF000:i8
            stelem cnt$0x1e17f10, 0x8:i8, 0x11800:i8
            stelem cnt$0x1e17f10, 0x9:i8, 0xF000:i8
            stelem cnt$0x1e17f10, 0xA:i8, 0x14000:i8
            stelem cnt$0x1e17f10, 0xB:i8, 0xC800:i8
            stelem cnt$0x1e17f10, 0xC:i8, 0xA000:i8
            stelem cnt$0x1e17f10, 0xD:i8, 0x14000:i8
            stelem cnt$0x1e17f10, 0xE:i8, 0x14000:i8
            stelem cnt$0x1e17f10, 0xF:i8, 0x19000:i8
            stelem cnt$0x1e17f10, 0x10:i8, 0x1B800:i8
            stelem cnt$0x1e17f10, 0x11:i8, 0x16800:i8
            stelem cnt$0x1e17f10, 0x12:i8, 0x1E000:i8
            stelem cnt$0x1e17f10, 0x13:i8, 0x23000:i8
            stelem cnt$0x1e17f10, 0x14:i8, 0x25800:i8
            stelem cnt$0x1e17f10, 0x15:i8, 0x20800:i8
            stelem cnt$0x1e17f10, 0x16:i8, 0x2A800:i8
            stelem cnt$0x1e17f10, 0x17:i8, 0x2F800:i8
            stelem cnt$0x1e17f10, 0x18:i8, 0x41000:i8
            stelem cnt$0x1e17f10, 0x19:i8, 0x4B000:i8
            stelem cnt$0x1e17f10, 0x1A:i8, 0x5B800:i8
            stelem cnt$0x1e17f10, 0x1B:i8, 0x65800:i8
            stelem cnt$0x1e17f10, 0x1C:i8, 0x9F000:i8
            stelem cnt$0x1e17f10, 0x1D:i8, 0xCFFD3:i8
            mov cur$0x1e17f10, 0x0:i8
            mov i$0x1e17f10, 0x0:i8
        __temp_161$0x1e17f10:
            ble num_tasks$0x1ef28a0, i$0x1e17f10, __temp_163$0x1e17f10
            mov v_begin$0x1e17f10, cur$0x1e17f10
            ldelem __temp_165$0x1e17fb0, cnt$0x1e17f10, i$0x1e17f10
            add cur$0x1e17f10, cur$0x1e17f10, __temp_165$0x1e17fb0
            blt vertices_cnt$0x1ef28a0, cur$0x1e17f10, __temp_169$0x1e17fb0
            br __temp_167$0x1e17fb0
        __temp_169$0x1e17fb0:
            mov cur$0x1e17f10, vertices_cnt$0x1ef28a0
        __temp_167$0x1e17fb0:
            mov v_end$0x1e17f10, cur$0x1e17f10
            lda __temp_170$0x1e17fb0, n_begin$0x1e17f10
            lda __temp_171$0x1e17fb0, n_end$0x1e17f10
            call _get_in_neighbors_range$0x1ef28a0, <missing>, v_begin$0x1e17f10, v_end$0x1e17f10, __temp_170$0x1e17fb0, __temp_171$0x1e17fb0
            mul __temp_172$0x1e17fb0, i$0x1e17f10, 0x4:i8
            add __temp_173$0x1e17fb0, __temp_172$0x1e17fb0, 0x0:i8
            stelem partitions$0x1ef28a0, __temp_173$0x1e17fb0, v_begin$0x1e17f10
            mul __temp_174$0x1e17fb0, i$0x1e17f10, 0x4:i8
            add __temp_175$0x1e17fb0, __temp_174$0x1e17fb0, 0x1:i8
            stelem partitions$0x1ef28a0, __temp_175$0x1e17fb0, v_end$0x1e17f10
            mul __temp_176$0x1e17fb0, i$0x1e17f10, 0x4:i8
            add __temp_177$0x1e17fb0, __temp_176$0x1e17fb0, 0x2:i8
            stelem partitions$0x1ef28a0, __temp_177$0x1e17fb0, n_begin$0x1e17f10
            mul __temp_178$0x1e17fb0, i$0x1e17f10, 0x4:i8
            add __temp_179$0x1e17fb0, __temp_178$0x1e17fb0, 0x3:i8
            stelem partitions$0x1ef28a0, __temp_179$0x1e17fb0, n_end$0x1e17f10
        __temp_162$0x1e17f10:
            add i$0x1e17f10, i$0x1e17f10, 0x1:i8
            br __temp_161$0x1e17f10
        __temp_163$0x1e17f10:
            ret
    }
    function create_new_iter_task
    {
            mov space$0x1e42e60, 0x0:i8
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0x7:msq, 0x200001010:msq"
            lda __temp_184$0x1e42e60, iter$0x1ef28a0
            mov __temp_185$0x1e42e60, 0x8:i
            sti 0x200001018:i, __temp_184$0x1e42e60
            sti 0x200001020:i, __temp_185$0x1e42e60
            lda __temp_186$0x1e42e60, num_tasks$0x1ef28a0
            mov __temp_187$0x1e42e60, 0x8:i
            sti 0x200001028:i, __temp_186$0x1e42e60
            sti 0x200001030:i, __temp_187$0x1e42e60
            mul __temp_190$0x1e42e60, num_tasks$0x1ef28a0, 0x200:i8
            ldelema __temp_188$0x1e42e60, task_status$0x1ef28a0, 0x0:i8
            sub __temp_189$0x1e42e60, __temp_190$0x1e42e60, 0x0:i8
            mul __temp_189$0x1e42e60, 0x8:i, __temp_189$0x1e42e60
            sti 0x200001038:i, __temp_188$0x1e42e60
            sti 0x200001040:i, __temp_189$0x1e42e60
            lda __temp_191$0x1e42e60, vertices_cnt$0x1ef28a0
            mov __temp_192$0x1e42e60, 0x8:i
            sti 0x200001048:i, __temp_191$0x1e42e60
            sti 0x200001050:i, __temp_192$0x1e42e60
            lda __temp_193$0x1e42e60, vertices$0x1ef28a0
            mov __temp_194$0x1e42e60, 0x8:i
            sti 0x200001058:i, __temp_193$0x1e42e60
            sti 0x200001060:i, __temp_194$0x1e42e60
            lda __temp_195$0x1e42e60, in_neighbors$0x1ef28a0
            mov __temp_196$0x1e42e60, 0x8:i
            sti 0x200001068:i, __temp_195$0x1e42e60
            sti 0x200001070:i, __temp_196$0x1e42e60
            mul __temp_199$0x1e42e60, 0x40:i8, 0x4:i8
            ldelema __temp_197$0x1e42e60, partitions$0x1ef28a0, 0x0:i8
            sub __temp_198$0x1e42e60, __temp_199$0x1e42e60, 0x0:i8
            mul __temp_198$0x1e42e60, 0x8:i, __temp_198$0x1e42e60
            sti 0x200001078:i, __temp_197$0x1e42e60
            sti 0x200001080:i, __temp_198$0x1e42e60
            asm "mov $0x0:msq, 0x200001088:msq"
            asm "mov $__newr0:msq, 0x200001090:msq"
            mov __temp_200$0x1e42e60, space$0x1e42e60
            sti 0x200001098:i, __temp_200$0x1e42e60
            asm "mov $0x200001000:msq, 0x2000010a0:msq"
            asm "mov $0x200001010:msq, 0x2000010a8:msq"
            asm "mov $0x200001088:msq, 0x2000010b0:msq"
            asm "mov $0x200001090:msq, 0x2000010b8:msq"
            asm "mov $0x200001098:msq, 0x2000010c0:msq"
            asm "spawnx 0x2000010a0, 0x2000010a8, 0x2000010b0, 0x2000010b8, 0x2000010c0"
            ldi __temp_181$0x1e42e60, 0x100000400:i
            ldi __temp_182$0x1e42e60, 0x100000408:i
            add __temp_183$0x1e42e60, __temp_181$0x1e42e60, __temp_182$0x1e42e60
            lda __temp_201$0x1e42e60, new_iter_task$0x1ef28a0
            sub __temp_183$0x1e42e60, __temp_183$0x1e42e60, 0x8:i8
            sti __temp_183$0x1e42e60, __temp_201$0x1e42e60
            sub __temp_183$0x1e42e60, __temp_183$0x1e42e60, 0x8:i8
            sti __temp_183$0x1e42e60, 0x0:i8
            ret
    }
    function _get_in_neighbors_range
    {
            sub v_last$0x1e11820, v_end$0x1e11780, 0x1:i8
            mul __temp_151$0x1e11820, 0x3:i8, v_begin$0x1e11780
            add __temp_152$0x1e11820, __temp_151$0x1e11820, 0x2:i8
            ldelem __temp_153$0x1e11820, vertices$0x1ef28a0, __temp_152$0x1e11820
            sti n_begin$0x1e11780, __temp_153$0x1e11820
            mul __temp_154$0x1e11820, 0x3:i8, v_last$0x1e11820
            add __temp_155$0x1e11820, __temp_154$0x1e11820, 0x2:i8
            ldelem __temp_156$0x1e11820, vertices$0x1ef28a0, __temp_155$0x1e11820
            mul __temp_157$0x1e11820, 0x3:i8, v_last$0x1e11820
            add __temp_158$0x1e11820, __temp_157$0x1e11820, 0x0:i8
            ldelem __temp_159$0x1e11820, vertices$0x1ef28a0, __temp_158$0x1e11820
            add __temp_160$0x1e11820, __temp_156$0x1e11820, __temp_159$0x1e11820
            sti n_end$0x1e11780, __temp_160$0x1e11820
            ret
    }
    function new_iter_task
    {
            cgt __temp_315$0x1e2e2a0, iter$0x1ef28a0, 0x0:i8
            bnz __temp_315$0x1e2e2a0, __temp_316$0x1e2e2a0
            br __temp_314$0x1e2e2a0
        __temp_316$0x1e2e2a0:
            call pc_sync$0x1ef28a0, __temp_317$0x1e2e340, iter$0x1ef28a0
        __temp_314$0x1e2e2a0:
            mov i$0x1e2e2a0, 0x0:i8
        __temp_318$0x1e2e2a0:
            ble num_tasks$0x1ef28a0, i$0x1e2e2a0, __temp_320$0x1e2e2a0
            lda __temp_322$0x1e2eda0, v_begin$0x1e2e2a0
            lda __temp_323$0x1e2eda0, v_end$0x1e2e2a0
            call get_vertices_range$0x1ef28a0, <missing>, i$0x1e2e2a0, __temp_322$0x1e2eda0, __temp_323$0x1e2eda0
            lda __temp_324$0x1e2eda0, n_begin$0x1e2e2a0
            lda __temp_325$0x1e2eda0, n_end$0x1e2e2a0
            call get_in_neighbors_range$0x1ef28a0, <missing>, i$0x1e2e2a0, __temp_324$0x1e2eda0, __temp_325$0x1e2eda0
            add __temp_326$0x1e2eda0, i$0x1e2e2a0, 0x1:i8
            mul space$0x1e2e2a0, 0x400000000000:i8, __temp_326$0x1e2eda0
            beq iter$0x1ef28a0, 0x0:i8, __temp_330$0x1e2eda0
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0x7:msq, 0x200001010:msq"
            lda __temp_334$0x1e909f0, iter$0x1ef28a0
            mov __temp_335$0x1e909f0, 0x8:i
            sti 0x200001018:i, __temp_334$0x1e909f0
            sti 0x200001020:i, __temp_335$0x1e909f0
            lda __temp_336$0x1e909f0, num_tasks$0x1ef28a0
            mov __temp_337$0x1e909f0, 0x8:i
            sti 0x200001028:i, __temp_336$0x1e909f0
            sti 0x200001030:i, __temp_337$0x1e909f0
            lda __temp_338$0x1e909f0, vertices_cnt$0x1ef28a0
            mov __temp_339$0x1e909f0, 0x8:i
            sti 0x200001038:i, __temp_338$0x1e909f0
            sti 0x200001040:i, __temp_339$0x1e909f0
            lda __temp_340$0x1e909f0, vertices$0x1ef28a0
            mov __temp_341$0x1e909f0, 0x8:i
            sti 0x200001048:i, __temp_340$0x1e909f0
            sti 0x200001050:i, __temp_341$0x1e909f0
            lda __temp_342$0x1e909f0, in_neighbors$0x1ef28a0
            mov __temp_343$0x1e909f0, 0x8:i
            sti 0x200001058:i, __temp_342$0x1e909f0
            sti 0x200001060:i, __temp_343$0x1e909f0
            mul __temp_346$0x1e909f0, i$0x1e2e2a0, 0x200:i8
            mul __temp_347$0x1e909f0, i$0x1e2e2a0, 0x200:i8
            add __temp_348$0x1e909f0, __temp_347$0x1e909f0, 0x1:i8
            ldelema __temp_344$0x1e909f0, task_status$0x1ef28a0, __temp_346$0x1e909f0
            sub __temp_345$0x1e909f0, __temp_348$0x1e909f0, __temp_346$0x1e909f0
            mul __temp_345$0x1e909f0, 0x8:i, __temp_345$0x1e909f0
            sti 0x200001068:i, __temp_344$0x1e909f0
            sti 0x200001070:i, __temp_345$0x1e909f0
            mul __temp_351$0x1e909f0, 0x40:i8, 0x4:i8
            ldelema __temp_349$0x1e909f0, partitions$0x1ef28a0, 0x0:i8
            sub __temp_350$0x1e909f0, __temp_351$0x1e909f0, 0x0:i8
            mul __temp_350$0x1e909f0, 0x8:i, __temp_350$0x1e909f0
            sti 0x200001078:i, __temp_349$0x1e909f0
            sti 0x200001080:i, __temp_350$0x1e909f0
            asm "mov $0x0:msq, 0x200001088:msq"
            asm "mov $__newr0:msq, 0x200001090:msq"
            mov __temp_352$0x1e909f0, space$0x1e2e2a0
            sti 0x200001098:i, __temp_352$0x1e909f0
            asm "mov $0x200001000:msq, 0x2000010a0:msq"
            asm "mov $0x200001010:msq, 0x2000010a8:msq"
            asm "mov $0x200001088:msq, 0x2000010b0:msq"
            asm "mov $0x200001090:msq, 0x2000010b8:msq"
            asm "mov $0x200001098:msq, 0x2000010c0:msq"
            asm "spawnx 0x2000010a0, 0x2000010a8, 0x2000010b0, 0x2000010b8, 0x2000010c0"
            ldi __temp_331$0x1e909f0, 0x100000400:i
            ldi __temp_332$0x1e909f0, 0x100000408:i
            add __temp_333$0x1e909f0, __temp_331$0x1e909f0, __temp_332$0x1e909f0
            lda __temp_353$0x1e909f0, calc_task$0x1ef28a0
            sub __temp_333$0x1e909f0, __temp_333$0x1e909f0, 0x8:i8
            sti __temp_333$0x1e909f0, __temp_353$0x1e909f0
            sub __temp_333$0x1e909f0, __temp_333$0x1e909f0, 0x8:i8
            sti __temp_333$0x1e909f0, 0x8:i8
            sub __temp_333$0x1e909f0, __temp_333$0x1e909f0, 0x8:i8
            sti __temp_333$0x1e909f0, i$0x1e2e2a0
            br __temp_328$0x1e2eda0
        __temp_330$0x1e2eda0:
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0x9:msq, 0x200001010:msq"
            lda __temp_357$0x1e2ee40, iter$0x1ef28a0
            mov __temp_358$0x1e2ee40, 0x8:i
            sti 0x200001018:i, __temp_357$0x1e2ee40
            sti 0x200001020:i, __temp_358$0x1e2ee40
            lda __temp_359$0x1e2ee40, num_tasks$0x1ef28a0
            mov __temp_360$0x1e2ee40, 0x8:i
            sti 0x200001028:i, __temp_359$0x1e2ee40
            sti 0x200001030:i, __temp_360$0x1e2ee40
            lda __temp_361$0x1e2ee40, vertices_cnt$0x1ef28a0
            mov __temp_362$0x1e2ee40, 0x8:i
            sti 0x200001038:i, __temp_361$0x1e2ee40
            sti 0x200001040:i, __temp_362$0x1e2ee40
            lda __temp_363$0x1e2ee40, vertices$0x1ef28a0
            mov __temp_364$0x1e2ee40, 0x8:i
            sti 0x200001048:i, __temp_363$0x1e2ee40
            sti 0x200001050:i, __temp_364$0x1e2ee40
            lda __temp_365$0x1e2ee40, in_neighbors$0x1ef28a0
            mov __temp_366$0x1e2ee40, 0x8:i
            sti 0x200001058:i, __temp_365$0x1e2ee40
            sti 0x200001060:i, __temp_366$0x1e2ee40
            mul __temp_369$0x1e2ee40, 0x400:i8, 0x400:i8
            mul __temp_370$0x1e2ee40, __temp_369$0x1e2ee40, 0x46:i8
            mul __temp_371$0x1e2ee40, __temp_370$0x1e2ee40, 0x2:i8
            div __temp_372$0x1e2ee40, __temp_371$0x1e2ee40, 0x2:i8
            add __temp_373$0x1e2ee40, __temp_372$0x1e2ee40, 0x1:i8
            ldelema __temp_367$0x1e2ee40, in_neighbors$0x1ef28a0, 0x0:i8
            sub __temp_368$0x1e2ee40, __temp_373$0x1e2ee40, 0x0:i8
            mul __temp_368$0x1e2ee40, 0x8:i, __temp_368$0x1e2ee40
            sti 0x200001068:i, __temp_367$0x1e2ee40
            sti 0x200001070:i, __temp_368$0x1e2ee40
            mul __temp_376$0x1e2ee40, 0x400:i8, 0x400:i8
            mul __temp_377$0x1e2ee40, __temp_376$0x1e2ee40, 0x5:i8
            mul __temp_378$0x1e2ee40, __temp_377$0x1e2ee40, 0x3:i8
            ldelema __temp_374$0x1e2ee40, vertices$0x1ef28a0, 0x0:i8
            sub __temp_375$0x1e2ee40, __temp_378$0x1e2ee40, 0x0:i8
            mul __temp_375$0x1e2ee40, 0x8:i, __temp_375$0x1e2ee40
            sti 0x200001078:i, __temp_374$0x1e2ee40
            sti 0x200001080:i, __temp_375$0x1e2ee40
            mul __temp_381$0x1e2ee40, i$0x1e2e2a0, 0x200:i8
            mul __temp_382$0x1e2ee40, i$0x1e2e2a0, 0x200:i8
            add __temp_383$0x1e2ee40, __temp_382$0x1e2ee40, 0x1:i8
            ldelema __temp_379$0x1e2ee40, task_status$0x1ef28a0, __temp_381$0x1e2ee40
            sub __temp_380$0x1e2ee40, __temp_383$0x1e2ee40, __temp_381$0x1e2ee40
            mul __temp_380$0x1e2ee40, 0x8:i, __temp_380$0x1e2ee40
            sti 0x200001088:i, __temp_379$0x1e2ee40
            sti 0x200001090:i, __temp_380$0x1e2ee40
            mul __temp_386$0x1e2ee40, 0x40:i8, 0x4:i8
            ldelema __temp_384$0x1e2ee40, partitions$0x1ef28a0, 0x0:i8
            sub __temp_385$0x1e2ee40, __temp_386$0x1e2ee40, 0x0:i8
            mul __temp_385$0x1e2ee40, 0x8:i, __temp_385$0x1e2ee40
            sti 0x200001098:i, __temp_384$0x1e2ee40
            sti 0x2000010A0:i, __temp_385$0x1e2ee40
            asm "mov $0x0:msq, 0x2000010a8:msq"
            asm "mov $__newr0:msq, 0x2000010b0:msq"
            mov __temp_387$0x1e2ee40, space$0x1e2e2a0
            sti 0x2000010B8:i, __temp_387$0x1e2ee40
            asm "mov $0x200001000:msq, 0x2000010c0:msq"
            asm "mov $0x200001010:msq, 0x2000010c8:msq"
            asm "mov $0x2000010a8:msq, 0x2000010d0:msq"
            asm "mov $0x2000010b0:msq, 0x2000010d8:msq"
            asm "mov $0x2000010b8:msq, 0x2000010e0:msq"
            asm "spawnx 0x2000010c0, 0x2000010c8, 0x2000010d0, 0x2000010d8, 0x2000010e0"
            ldi __temp_354$0x1e2ee40, 0x100000400:i
            ldi __temp_355$0x1e2ee40, 0x100000408:i
            add __temp_356$0x1e2ee40, __temp_354$0x1e2ee40, __temp_355$0x1e2ee40
            lda __temp_388$0x1e2ee40, calc_task$0x1ef28a0
            sub __temp_356$0x1e2ee40, __temp_356$0x1e2ee40, 0x8:i8
            sti __temp_356$0x1e2ee40, __temp_388$0x1e2ee40
            sub __temp_356$0x1e2ee40, __temp_356$0x1e2ee40, 0x8:i8
            sti __temp_356$0x1e2ee40, 0x8:i8
            sub __temp_356$0x1e2ee40, __temp_356$0x1e2ee40, 0x8:i8
            sti __temp_356$0x1e2ee40, i$0x1e2e2a0
        __temp_328$0x1e2eda0:
            mul __temp_389$0x1e2eda0, i$0x1e2e2a0, 0x200:i8
            stelem task_status$0x1ef28a0, __temp_389$0x1e2eda0, 0x0:i8
        __temp_319$0x1e2e2a0:
            add i$0x1e2e2a0, i$0x1e2e2a0, 0x1:i8
            br __temp_318$0x1e2e2a0
        __temp_320$0x1e2e2a0:
            mov space$0x1e2e2a0, 0x0:i8
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0x7:msq, 0x200001010:msq"
            lda __temp_394$0x1e2e2a0, iter$0x1ef28a0
            mov __temp_395$0x1e2e2a0, 0x8:i
            sti 0x200001018:i, __temp_394$0x1e2e2a0
            sti 0x200001020:i, __temp_395$0x1e2e2a0
            lda __temp_396$0x1e2e2a0, num_tasks$0x1ef28a0
            mov __temp_397$0x1e2e2a0, 0x8:i
            sti 0x200001028:i, __temp_396$0x1e2e2a0
            sti 0x200001030:i, __temp_397$0x1e2e2a0
            lda __temp_398$0x1e2e2a0, vertices_cnt$0x1ef28a0
            mov __temp_399$0x1e2e2a0, 0x8:i
            sti 0x200001038:i, __temp_398$0x1e2e2a0
            sti 0x200001040:i, __temp_399$0x1e2e2a0
            lda __temp_400$0x1e2e2a0, vertices$0x1ef28a0
            mov __temp_401$0x1e2e2a0, 0x8:i
            sti 0x200001048:i, __temp_400$0x1e2e2a0
            sti 0x200001050:i, __temp_401$0x1e2e2a0
            lda __temp_402$0x1e2e2a0, in_neighbors$0x1ef28a0
            mov __temp_403$0x1e2e2a0, 0x8:i
            sti 0x200001058:i, __temp_402$0x1e2e2a0
            sti 0x200001060:i, __temp_403$0x1e2e2a0
            lda __temp_404$0x1e2e2a0, begin_time_sec$0x1ef28a0
            mov __temp_405$0x1e2e2a0, 0x8:i
            sti 0x200001068:i, __temp_404$0x1e2e2a0
            sti 0x200001070:i, __temp_405$0x1e2e2a0
            lda __temp_406$0x1e2e2a0, begin_time_nsec$0x1ef28a0
            mov __temp_407$0x1e2e2a0, 0x8:i
            sti 0x200001078:i, __temp_406$0x1e2e2a0
            sti 0x200001080:i, __temp_407$0x1e2e2a0
            asm "mov $0x1:msq, 0x200001088:msq"
            mul __temp_410$0x1e2e2a0, num_tasks$0x1ef28a0, 0x200:i8
            ldelema __temp_408$0x1e2e2a0, task_status$0x1ef28a0, 0x0:i8
            sub __temp_409$0x1e2e2a0, __temp_410$0x1e2e2a0, 0x0:i8
            mul __temp_409$0x1e2e2a0, 0x8:i, __temp_409$0x1e2e2a0
            sti 0x200001090:i, __temp_408$0x1e2e2a0
            sti 0x200001098:i, __temp_409$0x1e2e2a0
            asm "mov $__newr0:msq, 0x2000010a0:msq"
            mov __temp_411$0x1e2e2a0, space$0x1e2e2a0
            sti 0x2000010A8:i, __temp_411$0x1e2e2a0
            asm "mov $0x200001000:msq, 0x2000010b0:msq"
            asm "mov $0x200001010:msq, 0x2000010b8:msq"
            asm "mov $0x200001088:msq, 0x2000010c0:msq"
            asm "mov $0x2000010a0:msq, 0x2000010c8:msq"
            asm "mov $0x2000010a8:msq, 0x2000010d0:msq"
            asm "spawnx 0x2000010b0, 0x2000010b8, 0x2000010c0, 0x2000010c8, 0x2000010d0"
            ldi __temp_391$0x1e2e2a0, 0x100000400:i
            ldi __temp_392$0x1e2e2a0, 0x100000408:i
            add __temp_393$0x1e2e2a0, __temp_391$0x1e2e2a0, __temp_392$0x1e2e2a0
            lda __temp_412$0x1e2e2a0, barrier_task$0x1ef28a0
            sub __temp_393$0x1e2e2a0, __temp_393$0x1e2e2a0, 0x8:i8
            sti __temp_393$0x1e2e2a0, __temp_412$0x1e2e2a0
            sub __temp_393$0x1e2e2a0, __temp_393$0x1e2e2a0, 0x8:i8
            sti __temp_393$0x1e2e2a0, 0x8:i8
            sub __temp_393$0x1e2e2a0, __temp_393$0x1e2e2a0, 0x8:i8
            sti __temp_393$0x1e2e2a0, iter$0x1ef28a0
            asm "exit:c"
    }
    function pc_sync
    {
            sti 0x100000420:i, 0xB:i8
            sti 0x100001000:i, phase_no$0x1fb1ab0
            asm "int 0x80"
            ldi phase_no$0x1fb1ab0, 0x100001000:i
            ret phase_no$0x1fb1ab0
    }
    function get_vertices_range
    {
            mul __temp_138$0x1e09790, id$0x1e096a0, 0x4:i8
            add __temp_139$0x1e09790, __temp_138$0x1e09790, 0x0:i8
            ldelem __temp_140$0x1e09790, partitions$0x1ef28a0, __temp_139$0x1e09790
            sti v_begin$0x1e096a0, __temp_140$0x1e09790
            mul __temp_141$0x1e09790, id$0x1e096a0, 0x4:i8
            add __temp_142$0x1e09790, __temp_141$0x1e09790, 0x1:i8
            ldelem __temp_143$0x1e09790, partitions$0x1ef28a0, __temp_142$0x1e09790
            sti v_end$0x1e096a0, __temp_143$0x1e09790
            ret
    }
    function get_in_neighbors_range
    {
            mul __temp_144$0x1e0d840, id$0x1e0d7a0, 0x4:i8
            add __temp_145$0x1e0d840, __temp_144$0x1e0d840, 0x2:i8
            ldelem __temp_146$0x1e0d840, partitions$0x1ef28a0, __temp_145$0x1e0d840
            sti n_begin$0x1e0d7a0, __temp_146$0x1e0d840
            mul __temp_147$0x1e0d840, id$0x1e0d7a0, 0x4:i8
            add __temp_148$0x1e0d840, __temp_147$0x1e0d840, 0x3:i8
            ldelem __temp_149$0x1e0d840, partitions$0x1ef28a0, __temp_148$0x1e0d840
            sti n_end$0x1e0d7a0, __temp_149$0x1e0d840
            ret
    }
    function calc_task
    {
            lda __temp_236$0x1e69f00, v_begin$0x1e69f00
            lda __temp_237$0x1e69f00, v_end$0x1e69f00
            call get_vertices_range$0x1ef28a0, <missing>, id$0x1e69e80, __temp_236$0x1e69f00, __temp_237$0x1e69f00
            lda __temp_238$0x1e69f00, n_begin$0x1e69f00
            lda __temp_239$0x1e69f00, n_end$0x1e69f00
            call get_in_neighbors_range$0x1ef28a0, <missing>, id$0x1e69e80, __temp_238$0x1e69f00, __temp_239$0x1e69f00
            mov pre_pr$0x1e69f00, 0x200200000:i
            mov cur_pr$0x1e69f00, 0x202A00000:i
            mul __temp_241$0x1e69f00, 0x400:i8, 0x400:i8
            mul __temp_242$0x1e69f00, __temp_241$0x1e69f00, 0x5:i8
            mul __temp_243$0x1e69f00, __temp_242$0x1e69f00, 0x8:i8
            add __temp_244$0x1e69f00, 0x200200000:i8, __temp_243$0x1e69f00
            mul __temp_245$0x1e69f00, 0x400:i8, 0x400:i8
            mul __temp_246$0x1e69f00, __temp_245$0x1e69f00, 0x5:i8
            mul __temp_247$0x1e69f00, 0x8:i8, __temp_246$0x1e69f00
            call pc_get$0x1ef28a0, __temp_240$0x1e69f00, iter$0x1ef28a0, __temp_244$0x1e69f00, __temp_247$0x1e69f00, 0x200200000:i8
            mov v$0x1e69f00, 0x400000008:i
            mov n$0x1e69f00, 0x407800008:i
            ldi __temp_249$0x1e69f00, 0x400000000:i
            bne __temp_249$0x1e69f00, 0x8829EFF20:i8, __temp_251$0x1e69f00
            br __temp_248$0x1e69f00
        __temp_251$0x1e69f00:
            mul __temp_253$0x1e69cd0, v_begin$0x1e69f00, 0x3:i8
            ldelema __temp_252$0x1e69cd0, vertices$0x1ef28a0, __temp_253$0x1e69cd0
            sub __temp_254$0x1e69cd0, v_end$0x1e69f00, v_begin$0x1e69f00
            add __temp_255$0x1e69cd0, __temp_254$0x1e69cd0, 0x1:i8
            mul __temp_256$0x1e69cd0, __temp_255$0x1e69cd0, 0x3:i8
            mul __temp_257$0x1e69cd0, 0x8:i8, __temp_256$0x1e69cd0
            mul __temp_259$0x1e69cd0, v_begin$0x1e69f00, 0x3:i8
            ldelema __temp_258$0x1e69cd0, v$0x1e69f00, __temp_259$0x1e69cd0
            call memcpy$0x1ef28a0, <missing>, __temp_252$0x1e69cd0, __temp_257$0x1e69cd0, __temp_258$0x1e69cd0
            ldelema __temp_260$0x1e69cd0, in_neighbors$0x1ef28a0, n_begin$0x1e69f00
            sub __temp_261$0x1e69cd0, n_end$0x1e69f00, n_begin$0x1e69f00
            add __temp_262$0x1e69cd0, __temp_261$0x1e69cd0, 0x1:i8
            mul __temp_263$0x1e69cd0, 0x8:i8, __temp_262$0x1e69cd0
            ldelema __temp_264$0x1e69cd0, n$0x1e69f00, n_begin$0x1e69f00
            call memcpy$0x1ef28a0, <missing>, __temp_260$0x1e69cd0, __temp_263$0x1e69cd0, __temp_264$0x1e69cd0
            sti 0x400000000:i, 0x8829EFF20:i8
        __temp_248$0x1e69f00:
            beq iter$0x1ef28a0, 0x0:i8, __temp_267$0x1e69f00
            mov i$0x1e69f00, v_begin$0x1e69f00
        __temp_268$0x1e77c50:
            ble v_end$0x1e69f00, i$0x1e69f00, __temp_270$0x1e77c50
            mov new_pr$0x1e69f00, 0.000000:r8
            mul __temp_272$0x1e77cf0, 0x3:i8, i$0x1e69f00
            add __temp_273$0x1e77cf0, __temp_272$0x1e77cf0, 0x2:i8
            ldelem n_begin$0x1e69f00, v$0x1e69f00, __temp_273$0x1e77cf0
            mul __temp_275$0x1e77cf0, 0x3:i8, i$0x1e69f00
            add __temp_276$0x1e77cf0, __temp_275$0x1e77cf0, 0x0:i8
            ldelem __temp_277$0x1e77cf0, v$0x1e69f00, __temp_276$0x1e77cf0
            add n_end$0x1e69f00, n_begin$0x1e69f00, __temp_277$0x1e77cf0
            mov j$0x1e69f00, n_begin$0x1e69f00
        __temp_279$0x1e77cf0:
            ble n_end$0x1e69f00, j$0x1e69f00, __temp_281$0x1e77cf0
            ldelem nbr$0x1e69f00, n$0x1e69f00, j$0x1e69f00
            ldelema __temp_284$0x1e77d90, pre_pr$0x1e69f00, nbr$0x1e69f00
            ldi __temp_285$0x1e77d90, __temp_284$0x1e77d90
            add new_pr$0x1e69f00, new_pr$0x1e69f00, __temp_285$0x1e77d90
        __temp_280$0x1e77cf0:
            add j$0x1e69f00, j$0x1e69f00, 0x1:i8
            br __temp_279$0x1e77cf0
        __temp_281$0x1e77cf0:
            mul new_pr$0x1e69f00, new_pr$0x1e69f00, 0.850000:r8
            add new_pr$0x1e69f00, new_pr$0x1e69f00, 0.150000:r8
            mul __temp_291$0x1e77cf0, 0x3:i8, i$0x1e69f00
            add __temp_292$0x1e77cf0, __temp_291$0x1e77cf0, 0x1:i8
            ldelema __temp_290$0x1e77cf0, v$0x1e69f00, __temp_292$0x1e77cf0
            ldi __temp_293$0x1e77cf0, __temp_290$0x1e77cf0
            mul new_pr$0x1e69f00, new_pr$0x1e69f00, __temp_293$0x1e77cf0
            ldelema __temp_295$0x1e77cf0, cur_pr$0x1e69f00, i$0x1e69f00
            sti __temp_295$0x1e77cf0, new_pr$0x1e69f00
        __temp_269$0x1e77c50:
            add i$0x1e69f00, i$0x1e69f00, 0x1:i8
            br __temp_268$0x1e77c50
        __temp_270$0x1e77c50:
            br __temp_265$0x1e69f00
        __temp_267$0x1e69f00:
            mov i$0x1e69f00, v_begin$0x1e69f00
        __temp_297$0x1e71e20:
            ble v_end$0x1e69f00, i$0x1e69f00, __temp_299$0x1e71e20
            mul __temp_302$0x1e71ec0, 0x3:i8, i$0x1e69f00
            add __temp_303$0x1e71ec0, __temp_302$0x1e71ec0, 0x1:i8
            ldelema __temp_301$0x1e71ec0, v$0x1e69f00, __temp_303$0x1e71ec0
            ldi __temp_304$0x1e71ec0, __temp_301$0x1e71ec0
            mul new_pr$0x1e69f00, 1.000000:r8, __temp_304$0x1e71ec0
            ldelema __temp_306$0x1e71ec0, cur_pr$0x1e69f00, i$0x1e69f00
            sti __temp_306$0x1e71ec0, new_pr$0x1e69f00
        __temp_298$0x1e71e20:
            add i$0x1e69f00, i$0x1e69f00, 0x1:i8
            br __temp_297$0x1e71e20
        __temp_299$0x1e71e20:
        __temp_265$0x1e69f00:
            add __temp_309$0x1e69f00, iter$0x1ef28a0, 0x1:i8
            ldelema __temp_310$0x1e69f00, cur_pr$0x1e69f00, v_begin$0x1e69f00
            sub __temp_311$0x1e69f00, v_end$0x1e69f00, v_begin$0x1e69f00
            mul __temp_312$0x1e69f00, 0x8:i8, __temp_311$0x1e69f00
            call pc_write$0x1ef28a0, __temp_308$0x1e69f00, __temp_309$0x1e69f00, __temp_310$0x1e69f00, __temp_312$0x1e69f00
            mul __temp_313$0x1e69f00, id$0x1e69e80, 0x200:i8
            stelem task_status$0x1ef28a0, __temp_313$0x1e69f00, 0x1:i8
            asm "exit:c"
    }
    function barrier_task
    {
            cne __temp_203$0x1e487e0, cur_iter$0x1e486f0, iter$0x1ef28a0
            bnz __temp_203$0x1e487e0, __temp_204$0x1e487e0
            br __temp_202$0x1e487e0
        __temp_204$0x1e487e0:
            asm "exit:ad"
        __temp_202$0x1e487e0:
            mov i$0x1e487e0, 0x0:i8
        __temp_205$0x1e487e0:
            ble num_tasks$0x1ef28a0, i$0x1e487e0, __temp_207$0x1e487e0
            mul __temp_210$0x1e48b10, i$0x1e487e0, 0x200:i8
            ldelem __temp_211$0x1e48b10, task_status$0x1ef28a0, __temp_210$0x1e48b10
            bne __temp_211$0x1e48b10, 0x1:i8, __temp_213$0x1e48b10
            br __temp_209$0x1e48b10
        __temp_213$0x1e48b10:
            asm "exit:a"
        __temp_209$0x1e48b10:
        __temp_206$0x1e487e0:
            add i$0x1e487e0, i$0x1e487e0, 0x1:i8
            br __temp_205$0x1e487e0
        __temp_207$0x1e487e0:
            add iter$0x1ef28a0, iter$0x1ef28a0, 0x1:i8
            beq iter$0x1ef28a0, 0x1F:i8, __temp_218$0x1e487e0
            br __temp_216$0x1e487e0
        __temp_218$0x1e487e0:
            call output_char$0x1ef28a0, <missing>, 0x52:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x61:i1
            call output_char$0x1ef28a0, <missing>, 0x63:i1
            call output_char$0x1ef28a0, <missing>, 0x68:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x64:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_char$0x1ef28a0, <missing>, 0x6D:i1
            call output_char$0x1ef28a0, <missing>, 0x61:i1
            call output_char$0x1ef28a0, <missing>, 0x78:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_char$0x1ef28a0, <missing>, 0x69:i1
            call output_char$0x1ef28a0, <missing>, 0x74:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x72:i1
            call output_char$0x1ef28a0, <missing>, 0x3A:i1
            call output_q$0x1ef28a0, <missing>, 0x1E:i8
            call output_char$0x1ef28a0, <missing>, 0x2E:i1
            call output_char$0x1ef28a0, <missing>, 0xA:i8
            call output_char$0x1ef28a0, <missing>, 0x54:i1
            call output_char$0x1ef28a0, <missing>, 0x69:i1
            call output_char$0x1ef28a0, <missing>, 0x6D:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_char$0x1ef28a0, <missing>, 0x75:i1
            call output_char$0x1ef28a0, <missing>, 0x73:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x64:i1
            call output_char$0x1ef28a0, <missing>, 0x3A:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            lda __temp_220$0x1e4ae50, begin_time_sec$0x1ef28a0
            lda __temp_221$0x1e4ae50, begin_time_nsec$0x1ef28a0
            call print_time_diff_and_update$0x1ef28a0, __temp_219$0x1e4ae50, __temp_220$0x1e4ae50, __temp_221$0x1e4ae50
            mov i$0x1e487e0, __temp_219$0x1e4ae50
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_char$0x1ef28a0, <missing>, 0x73:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x63:i1
            call output_char$0x1ef28a0, <missing>, 0x6F:i1
            call output_char$0x1ef28a0, <missing>, 0x6E:i1
            call output_char$0x1ef28a0, <missing>, 0x64:i1
            call output_char$0x1ef28a0, <missing>, 0x73:i1
            call output_char$0x1ef28a0, <missing>, 0x2E:i1
            call output_char$0x1ef28a0, <missing>, 0xA:i8
            asm "mov $0x0:msq, 0x200001000:msq"
            asm "mov $0x0:msq, 0x200001008:msq"
            asm "mov $0x3:msq, 0x200001010:msq"
            lda __temp_225$0x1e4ae50, vertices_cnt$0x1ef28a0
            mov __temp_226$0x1e4ae50, 0x8:i
            sti 0x200001018:i, __temp_225$0x1e4ae50
            sti 0x200001020:i, __temp_226$0x1e4ae50
            lda __temp_227$0x1e4ae50, vertices$0x1ef28a0
            mov __temp_228$0x1e4ae50, 0x8:i
            sti 0x200001028:i, __temp_227$0x1e4ae50
            sti 0x200001030:i, __temp_228$0x1e4ae50
            mul __temp_231$0x1e4ae50, 0x400:i8, 0x400:i8
            mul __temp_232$0x1e4ae50, __temp_231$0x1e4ae50, 0x5:i8
            mul __temp_233$0x1e4ae50, __temp_232$0x1e4ae50, 0x3:i8
            ldelema __temp_229$0x1e4ae50, vertices$0x1ef28a0, 0x0:i8
            sub __temp_230$0x1e4ae50, __temp_233$0x1e4ae50, 0x0:i8
            mul __temp_230$0x1e4ae50, 0x8:i, __temp_230$0x1e4ae50
            sti 0x200001038:i, __temp_229$0x1e4ae50
            sti 0x200001040:i, __temp_230$0x1e4ae50
            asm "mov $0x0:msq, 0x200001048:msq"
            asm "mov $__newr0:msq, 0x200001050:msq"
            asm "mov $0x200001000:msq, 0x200001058:msq"
            asm "mov $0x200001010:msq, 0x200001060:msq"
            asm "mov $0x200001048:msq, 0x200001068:msq"
            asm "mov $0x200001050:msq, 0x200001070:msq"
            asm "newr 0x200001058, 0x200001060, 0x200001068, 0x200001070"
            ldi __temp_222$0x1e4ae50, 0x100000400:i
            ldi __temp_223$0x1e4ae50, 0x100000408:i
            add __temp_224$0x1e4ae50, __temp_222$0x1e4ae50, __temp_223$0x1e4ae50
            lda __temp_234$0x1e4ae50, topk_task$0x1ef28a0
            sub __temp_224$0x1e4ae50, __temp_224$0x1e4ae50, 0x8:i8
            sti __temp_224$0x1e4ae50, __temp_234$0x1e4ae50
            sub __temp_224$0x1e4ae50, __temp_224$0x1e4ae50, 0x8:i8
            sti __temp_224$0x1e4ae50, 0x8:i8
            sub __temp_235$0x1e4ae50, iter$0x1ef28a0, 0x1:i8
            sub __temp_224$0x1e4ae50, __temp_224$0x1e4ae50, 0x8:i8
            sti __temp_224$0x1e4ae50, __temp_235$0x1e4ae50
            asm "exit:cd"
        __temp_216$0x1e487e0:
            call create_new_iter_task$0x1ef28a0, <missing>
            asm "exit:cd"
    }
    function pc_get
    {
            sti 0x100000420:i, 0x8:i8
            sti 0x100001000:i, phase_no$0x1fa8c60
            conv __temp_221$0x1fa8ce0, addr$0x1fa8c60
            sti 0x100001008:i, __temp_221$0x1fa8ce0
            sti 0x100001010:i, len$0x1fa8c60
            conv __temp_222$0x1fa8ce0, dst$0x1fa8c60
            sti 0x100001018:i, __temp_222$0x1fa8ce0
            asm "int 0x80"
            ldi len$0x1fa8c60, 0x100001000:i
            ret phase_no$0x1fa8c60
    }
    function memcpy
    {
            mov src_n$0x1ffaef0, 0x0:i8
            blt 0x8:i8, len$0x1ffae70, __temp_667$0x1ffaef0
            br __temp_665$0x1ffaef0
        __temp_667$0x1ffaef0:
            div __temp_668$0x1ffad70, len$0x1ffae70, 0x8:i8
            mul len8$0x1ffaef0, __temp_668$0x1ffad70, 0x8:i8
        __temp_670$0x1ffad70:
            ble len8$0x1ffaef0, src_n$0x1ffaef0, __temp_672$0x1ffad70
            ldelema __temp_674$0x1ffaf70, src$0x1ffae70, src_n$0x1ffaef0
            ldi __temp_675$0x1ffaf70, __temp_674$0x1ffaf70
            ldelema __temp_676$0x1ffaf70, dst$0x1ffae70, src_n$0x1ffaef0
            sti __temp_676$0x1ffaf70, __temp_675$0x1ffaf70
            add src_n$0x1ffaef0, src_n$0x1ffaef0, 0x8:i8
        __temp_671$0x1ffad70:
            br __temp_670$0x1ffad70
        __temp_672$0x1ffad70:
        __temp_665$0x1ffaef0:
        __temp_678$0x1ffaef0:
            ble len$0x1ffae70, src_n$0x1ffaef0, __temp_680$0x1ffaef0
            ldelem __temp_682$0x20001e0, src$0x1ffae70, src_n$0x1ffaef0
            stelem dst$0x1ffae70, src_n$0x1ffaef0, __temp_682$0x20001e0
            add src_n$0x1ffaef0, src_n$0x1ffaef0, 0x1:i8
        __temp_679$0x1ffaef0:
            br __temp_678$0x1ffaef0
        __temp_680$0x1ffaef0:
            ret
    }
    function pc_write
    {
            sti 0x100000420:i, 0x9:i8
            sti 0x100001000:i, phase_no$0x1fadab0
            conv __temp_224$0x1fadb30, addr$0x1fadab0
            sti 0x100001008:i, __temp_224$0x1fadb30
            sti 0x100001010:i, len$0x1fadab0
            asm "int 0x80"
            ldi len$0x1fadab0, 0x100001000:i
            ret len$0x1fadab0
    }
    function print_time_diff_and_update
    {
            lda __temp_722$0x21062e0, sec$0x21062e0
            lda __temp_723$0x21062e0, nsec$0x21062e0
            call gettime$0x1ef28a0, __temp_721$0x21062e0, __temp_722$0x21062e0, __temp_723$0x21062e0
            mov rt$0x21062e0, __temp_721$0x21062e0
            mov tsec$0x21062e0, sec$0x21062e0
            mov tnsec$0x21062e0, nsec$0x21062e0
            beq rt$0x21062e0, 0x0:i8, __temp_726$0x21062e0
            call output_char$0x1ef28a0, <missing>, 0x45:i1
            call output_char$0x1ef28a0, <missing>, 0x52:i1
            call output_char$0x1ef28a0, <missing>, 0x52:i1
            call output_char$0x1ef28a0, <missing>, 0xA:i8
            ret rt$0x21062e0
            br __temp_724$0x21062e0
        __temp_726$0x21062e0:
            lda __temp_727$0x2106130, tsec$0x21062e0
            lda __temp_728$0x2106130, tnsec$0x21062e0
            ldi __temp_729$0x2106130, base_sec$0x2106260
            ldi __temp_730$0x2106130, base_nsec$0x2106260
            call time_subtract$0x1ef28a0, <missing>, __temp_727$0x2106130, __temp_728$0x2106130, __temp_729$0x2106130, __temp_730$0x2106130
            sti base_sec$0x2106260, sec$0x21062e0
            sti base_nsec$0x2106260, nsec$0x21062e0
            call output_q$0x1ef28a0, <missing>, tsec$0x21062e0
            call output_char$0x1ef28a0, <missing>, 0x2E:i1
            call output_q_digits$0x1ef28a0, <missing>, tnsec$0x21062e0, 0x9:i8
        __temp_724$0x21062e0:
            ret 0x0:i8
    }
    function topk_task
    {
            call topk$0x1ef28a0, <missing>, iter$0x1e087c0
            asm "exit:c"
    }
    function time_subtract
    {
            ldi __temp_698$0x2013650, tv_nsec_from$0x20135b0
            blt __temp_698$0x2013650, tv_nsec$0x20135b0, __temp_700$0x2013650
            br __temp_697$0x2013650
        __temp_700$0x2013650:
            ldi __temp_701$0x20136f0, tv_sec_from$0x20135b0
            sub __temp_702$0x20136f0, __temp_701$0x20136f0, 0x1:i8
            sti tv_sec_from$0x20135b0, __temp_702$0x20136f0
            ldi __temp_703$0x20136f0, tv_nsec_from$0x20135b0
            add __temp_704$0x20136f0, __temp_703$0x20136f0, 0x3B9ACA00:i8
            sti tv_nsec_from$0x20135b0, __temp_704$0x20136f0
        __temp_697$0x2013650:
            ldi __temp_705$0x2013650, tv_sec_from$0x20135b0
            sub __temp_706$0x2013650, __temp_705$0x2013650, tv_sec$0x20135b0
            sti tv_sec_from$0x20135b0, __temp_706$0x2013650
            ldi __temp_707$0x2013650, tv_nsec_from$0x20135b0
            sub __temp_708$0x2013650, __temp_707$0x2013650, tv_nsec$0x20135b0
            sti tv_nsec_from$0x20135b0, __temp_708$0x2013650
            ret
    }
    function output_q_digits
    {
            mov num$0x1fda1e0, n$0x1fda140
            blt n$0x1fda140, 0x0:i8, __temp_275$0x1fda1e0
            br __temp_273$0x1fda1e0
        __temp_275$0x1fda1e0:
            sub num$0x1fda1e0, 0x0:i8, n$0x1fda140
            conv __temp_277$0x1fda290, 0x2D:i1
            call output_char$0x1ef28a0, <missing>, __temp_277$0x1fda290
        __temp_273$0x1fda1e0:
            mov num2$0x1fda1e0, 0x0:i8
            mov count$0x1fda1e0, 0x0:i8
        __temp_278$0x1fda1e0:
            ble num$0x1fda1e0, 0x0:i8, __temp_280$0x1fda1e0
            div __temp_282$0x1fdbb60, num$0x1fda1e0, 0xA:i8
            mul __temp_283$0x1fdbb60, __temp_282$0x1fdbb60, 0xA:i8
            sub c$0x1fda1e0, num$0x1fda1e0, __temp_283$0x1fdbb60
            div num$0x1fda1e0, num$0x1fda1e0, 0xA:i8
            mul num2$0x1fda1e0, num2$0x1fda1e0, 0xA:i8
            add num2$0x1fda1e0, num2$0x1fda1e0, c$0x1fda1e0
            add count$0x1fda1e0, count$0x1fda1e0, 0x1:i8
        __temp_279$0x1fda1e0:
            br __temp_278$0x1fda1e0
        __temp_280$0x1fda1e0:
            mov num$0x1fda1e0, 0x0:i8
        __temp_289$0x1fda1e0:
            add __temp_292$0x1fda1e0, num$0x1fda1e0, count$0x1fda1e0
            ble d$0x1fda140, __temp_292$0x1fda1e0, __temp_291$0x1fda1e0
            call output_char$0x1ef28a0, <missing>, 0x30:i1
            add num$0x1fda1e0, num$0x1fda1e0, 0x1:i8
        __temp_290$0x1fda1e0:
            br __temp_289$0x1fda1e0
        __temp_291$0x1fda1e0:
            mov num$0x1fda1e0, 0x0:i8
        __temp_295$0x1fda1e0:
            ble count$0x1fda1e0, num$0x1fda1e0, __temp_297$0x1fda1e0
            div __temp_299$0x1fe15c0, num2$0x1fda1e0, 0xA:i8
            mul __temp_300$0x1fe15c0, __temp_299$0x1fe15c0, 0xA:i8
            sub c$0x1fda1e0, num2$0x1fda1e0, __temp_300$0x1fe15c0
            div num2$0x1fda1e0, num2$0x1fda1e0, 0xA:i8
            add c$0x1fda1e0, c$0x1fda1e0, 0x30:i8
            call output_char$0x1ef28a0, <missing>, c$0x1fda1e0
            add num$0x1fda1e0, num$0x1fda1e0, 0x1:i8
        __temp_296$0x1fda1e0:
            br __temp_295$0x1fda1e0
        __temp_297$0x1fda1e0:
            ret
    }
    function topk
    {
            cgt __temp_89$0x1dcc620, 0x64:i8, vertices_cnt$0x1ef28a0
            bnz __temp_89$0x1dcc620, __temp_90$0x1dcc620
            mov topk_k$0x1dcc620, 0x64:i8
            br __temp_88$0x1dcc620
        __temp_90$0x1dcc620:
            mov topk_k$0x1dcc620, vertices_cnt$0x1ef28a0
        __temp_88$0x1dcc620:
            mul __temp_92$0x1dcc620, 0x8:i8, vertices_cnt$0x1ef28a0
            call pralloc$0x1ef28a0, __temp_91$0x1dcc620, __temp_92$0x1dcc620
            mov idx$0x1dcc620, __temp_91$0x1dcc620
            mov i$0x1dcc620, 0x0:i8
        __temp_93$0x1dcc620:
            ble vertices_cnt$0x1ef28a0, i$0x1dcc620, __temp_95$0x1dcc620
            stelem idx$0x1dcc620, i$0x1dcc620, i$0x1dcc620
        __temp_94$0x1dcc620:
            add i$0x1dcc620, i$0x1dcc620, 0x1:i8
            br __temp_93$0x1dcc620
        __temp_95$0x1dcc620:
            mov value$0x1dcc620, 0x202A00000:i
            add __temp_99$0x1dcc620, iter$0x1dcc5a0, 0x1:i8
            call pc_sync$0x1ef28a0, __temp_98$0x1dcc620, __temp_99$0x1dcc620
            add __temp_101$0x1dcc620, iter$0x1dcc5a0, 0x1:i8
            mul __temp_102$0x1dcc620, 0x400:i8, 0x400:i8
            mul __temp_103$0x1dcc620, __temp_102$0x1dcc620, 0x5:i8
            mul __temp_104$0x1dcc620, __temp_103$0x1dcc620, 0x8:i8
            add __temp_105$0x1dcc620, 0x200200000:i8, __temp_104$0x1dcc620
            mul __temp_106$0x1dcc620, 0x400:i8, 0x400:i8
            mul __temp_107$0x1dcc620, __temp_106$0x1dcc620, 0x5:i8
            mul __temp_108$0x1dcc620, 0x8:i8, __temp_107$0x1dcc620
            mul __temp_109$0x1dcc620, 0x400:i8, 0x400:i8
            mul __temp_110$0x1dcc620, __temp_109$0x1dcc620, 0x5:i8
            mul __temp_111$0x1dcc620, __temp_110$0x1dcc620, 0x8:i8
            add __temp_112$0x1dcc620, 0x200200000:i8, __temp_111$0x1dcc620
            call pc_get$0x1ef28a0, __temp_100$0x1dcc620, __temp_101$0x1dcc620, __temp_105$0x1dcc620, __temp_108$0x1dcc620, __temp_112$0x1dcc620
            mov i$0x1dcc620, 0x0:i8
        __temp_113$0x1dcc620:
            ble vertices_cnt$0x1ef28a0, i$0x1dcc620, __temp_115$0x1dcc620
            ldelem __temp_117$0x1ddddc0, value$0x1dcc620, i$0x1dcc620
            mul __temp_119$0x1ddddc0, 0x3:i8, i$0x1dcc620
            add __temp_120$0x1ddddc0, __temp_119$0x1ddddc0, 0x1:i8
            ldelema __temp_118$0x1ddddc0, vertices$0x1ef28a0, __temp_120$0x1ddddc0
            ldi __temp_121$0x1ddddc0, __temp_118$0x1ddddc0
            div __temp_122$0x1ddddc0, __temp_117$0x1ddddc0, __temp_121$0x1ddddc0
            stelem value$0x1dcc620, i$0x1dcc620, __temp_122$0x1ddddc0
        __temp_114$0x1dcc620:
            add i$0x1dcc620, i$0x1dcc620, 0x1:i8
            br __temp_113$0x1dcc620
        __temp_115$0x1dcc620:
            sub __temp_124$0x1dcc620, vertices_cnt$0x1ef28a0, 0x1:i8
            call select_topk$0x1ef28a0, <missing>, idx$0x1dcc620, 0x0:i8, __temp_124$0x1dcc620, value$0x1dcc620, topk_k$0x1dcc620
            sub __temp_125$0x1dcc620, vertices_cnt$0x1ef28a0, topk_k$0x1dcc620
            sub __temp_126$0x1dcc620, vertices_cnt$0x1ef28a0, 0x1:i8
            call sort$0x1ef28a0, <missing>, idx$0x1dcc620, __temp_125$0x1dcc620, __temp_126$0x1dcc620, value$0x1dcc620
            call output_char$0x1ef28a0, <missing>, 0x54:i1
            call output_char$0x1ef28a0, <missing>, 0x6F:i1
            call output_char$0x1ef28a0, <missing>, 0x70:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_q$0x1ef28a0, <missing>, topk_k$0x1dcc620
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_char$0x1ef28a0, <missing>, 0x61:i1
            call output_char$0x1ef28a0, <missing>, 0x66:i1
            call output_char$0x1ef28a0, <missing>, 0x74:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x72:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_char$0x1ef28a0, <missing>, 0x69:i1
            call output_char$0x1ef28a0, <missing>, 0x74:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x72:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_q$0x1ef28a0, <missing>, iter$0x1dcc5a0
            call output_char$0x1ef28a0, <missing>, 0x3A:i1
            call output_char$0x1ef28a0, <missing>, 0xA:i8
            sub i$0x1dcc620, vertices_cnt$0x1ef28a0, 0x1:i8
        __temp_127$0x1dcc620:
            sub __temp_131$0x1dcc620, vertices_cnt$0x1ef28a0, 0x1:i8
            sub __temp_132$0x1dcc620, __temp_131$0x1dcc620, topk_k$0x1dcc620
            ble i$0x1dcc620, __temp_132$0x1dcc620, __temp_129$0x1dcc620
            call output_char$0x1ef28a0, <missing>, 0x28:i1
            ldelem __temp_134$0x1de1ea0, idx$0x1dcc620, i$0x1dcc620
            call output_q$0x1ef28a0, <missing>, __temp_134$0x1de1ea0
            call output_char$0x1ef28a0, <missing>, 0x2C:i1
            ldelem __temp_135$0x1de1ea0, idx$0x1dcc620, i$0x1dcc620
            ldelem __temp_136$0x1de1ea0, value$0x1dcc620, __temp_135$0x1de1ea0
            call output_double$0x1ef28a0, <missing>, __temp_136$0x1de1ea0
            call output_char$0x1ef28a0, <missing>, 0x29:i1
            call output_char$0x1ef28a0, <missing>, 0xA:i8
        __temp_128$0x1dcc620:
            sub i$0x1dcc620, i$0x1dcc620, 0x1:i8
            br __temp_127$0x1dcc620
        __temp_129$0x1dcc620:
            ret
    }
    function pralloc
    {
            cle __temp_167$0x1f7f810, size$0x1f7f770, 0x0:i8
            bnz __temp_167$0x1f7f810, __temp_168$0x1f7f810
            br __temp_166$0x1f7f810
        __temp_168$0x1f7f810:
            conv __temp_169$0x1f7f810, 0x0:i8
            ret __temp_169$0x1f7f810
        __temp_166$0x1f7f810:
            call p_align_to$0x1ef28a0, __temp_170$0x1f7f810, size$0x1f7f770
            mov align_size$0x1f7f810, __temp_170$0x1f7f810
            ldi __temp_172$0x1f7f810, 0x200100000:i
            beq __temp_172$0x1f7f810, 0x0:i8, __temp_174$0x1f7f810
            br __temp_171$0x1f7f810
        __temp_174$0x1f7f810:
            call init_PR_var$0x1ef28a0, <missing>
        __temp_171$0x1f7f810:
            call _get_new_pa$0x1ef28a0, __temp_175$0x1f7f810, align_size$0x1f7f810
            mov ret$0x1f7f810, __temp_175$0x1f7f810
            ret ret$0x1f7f810
    }
    function select_topk
    {
        __temp_42$0x1dbf7e0:
            bz 0x1:i8, __temp_44$0x1dbf7e0
            sub __temp_45$0x1dbf060, end$0x1dbf760, start$0x1dbf760
            add i$0x1dbf7e0, __temp_45$0x1dbf060, 0x1:i8
            blt k$0x1dbf760, i$0x1dbf7e0, __temp_49$0x1dbf060
            ret
            br __temp_47$0x1dbf060
        __temp_49$0x1dbf060:
            ldelem __temp_50$0x1dbf0e0, idx$0x1dbf760, end$0x1dbf760
            ldelem pivot$0x1dbf7e0, value$0x1dbf760, __temp_50$0x1dbf0e0
            mov p$0x1dbf7e0, start$0x1dbf760
            mov i$0x1dbf7e0, start$0x1dbf760
        __temp_52$0x1dbf0e0:
            ble end$0x1dbf760, i$0x1dbf7e0, __temp_54$0x1dbf0e0
            ldelem __temp_57$0x1dbfa70, idx$0x1dbf760, i$0x1dbf7e0
            ldelem __temp_58$0x1dbfa70, value$0x1dbf760, __temp_57$0x1dbfa70
            blt __temp_58$0x1dbfa70, pivot$0x1dbf7e0, __temp_60$0x1dbfa70
            br __temp_56$0x1dbfa70
        __temp_60$0x1dbfa70:
            ldelem tmp$0x1dbf7e0, idx$0x1dbf760, p$0x1dbf7e0
            ldelem __temp_62$0x1dbfaf0, idx$0x1dbf760, i$0x1dbf7e0
            stelem idx$0x1dbf760, p$0x1dbf7e0, __temp_62$0x1dbfaf0
            stelem idx$0x1dbf760, i$0x1dbf7e0, tmp$0x1dbf7e0
            add p$0x1dbf7e0, p$0x1dbf7e0, 0x1:i8
        __temp_56$0x1dbfa70:
        __temp_53$0x1dbf0e0:
            add i$0x1dbf7e0, i$0x1dbf7e0, 0x1:i8
            br __temp_52$0x1dbf0e0
        __temp_54$0x1dbf0e0:
            ldelem tmp$0x1dbf7e0, idx$0x1dbf760, p$0x1dbf7e0
            ldelem __temp_66$0x1dbf0e0, idx$0x1dbf760, end$0x1dbf760
            stelem idx$0x1dbf760, p$0x1dbf7e0, __temp_66$0x1dbf0e0
            stelem idx$0x1dbf760, end$0x1dbf760, tmp$0x1dbf7e0
            sub __temp_67$0x1dbf0e0, end$0x1dbf760, p$0x1dbf7e0
            add i$0x1dbf7e0, __temp_67$0x1dbf0e0, 0x1:i8
            beq i$0x1dbf7e0, k$0x1dbf760, __temp_71$0x1dbf0e0
            blt i$0x1dbf7e0, k$0x1dbf760, __temp_74$0x1dc26b0
            add start$0x1dbf760, p$0x1dbf7e0, 0x1:i8
        __temp_76$0x1dc7fe0:
            ldelem __temp_79$0x1dc7fe0, idx$0x1dbf760, start$0x1dbf760
            ldelem __temp_80$0x1dc7fe0, value$0x1dbf760, __temp_79$0x1dc7fe0
            bne __temp_80$0x1dc7fe0, pivot$0x1dbf7e0, __temp_78$0x1dc7fe0
            add start$0x1dbf760, start$0x1dbf760, 0x1:i8
            ble end$0x1dbf760, start$0x1dbf760, __temp_85$0x1dc8080
            br __temp_83$0x1dc8080
        __temp_85$0x1dc8080:
            br __temp_78$0x1dc7fe0
        __temp_83$0x1dc8080:
        __temp_77$0x1dc7fe0:
            br __temp_76$0x1dc7fe0
        __temp_78$0x1dc7fe0:
            br __temp_72$0x1dc26b0
        __temp_74$0x1dc26b0:
            sub end$0x1dbf760, p$0x1dbf7e0, 0x1:i8
            sub k$0x1dbf760, k$0x1dbf760, i$0x1dbf7e0
        __temp_72$0x1dc26b0:
            br __temp_69$0x1dbf0e0
        __temp_71$0x1dbf0e0:
            ret
        __temp_69$0x1dbf0e0:
        __temp_47$0x1dbf060:
        __temp_43$0x1dbf7e0:
            br __temp_42$0x1dbf7e0
        __temp_44$0x1dbf7e0:
            ret
    }
    function sort
    {
            mul __temp_1$0x1dbf3a0, 0x8:i8, 0x2800:i8
            call pralloc$0x1ef28a0, __temp_0$0x1dbf3a0, __temp_1$0x1dbf3a0
            mov stack$0x1dbf3a0, __temp_0$0x1dbf3a0
            mov stop$0x1dbf3a0, 0x0:i8
            stelem stack$0x1dbf3a0, stop$0x1dbf3a0, start$0x1dbf550
            add stop$0x1dbf3a0, stop$0x1dbf3a0, 0x1:i8
            stelem stack$0x1dbf3a0, stop$0x1dbf3a0, end$0x1dbf550
            add stop$0x1dbf3a0, stop$0x1dbf3a0, 0x1:i8
        __temp_4$0x1dbf3a0:
            ble stop$0x1dbf3a0, 0x0:i8, __temp_6$0x1dbf3a0
            sub stop$0x1dbf3a0, stop$0x1dbf3a0, 0x1:i8
            ldelem end$0x1dbf550, stack$0x1dbf3a0, stop$0x1dbf3a0
            sub stop$0x1dbf3a0, stop$0x1dbf3a0, 0x1:i8
            ldelem start$0x1dbf550, stack$0x1dbf3a0, stop$0x1dbf3a0
            sub i$0x1dbf3a0, end$0x1dbf550, start$0x1dbf550
            blt 0x0:i8, i$0x1dbf3a0, __temp_15$0x1eccb20
            br __temp_13$0x1eccb20
        __temp_15$0x1eccb20:
            ldelem __temp_16$0x1eccba0, idx$0x1dbf550, end$0x1dbf550
            ldelem pivot$0x1dbf3a0, value$0x1dbf550, __temp_16$0x1eccba0
            mov p$0x1dbf3a0, start$0x1dbf550
            mov i$0x1dbf3a0, start$0x1dbf550
        __temp_18$0x1eccba0:
            ble end$0x1dbf550, i$0x1dbf3a0, __temp_20$0x1eccba0
            ldelem __temp_23$0x1eccc20, idx$0x1dbf550, i$0x1dbf3a0
            ldelem __temp_24$0x1eccc20, value$0x1dbf550, __temp_23$0x1eccc20
            blt __temp_24$0x1eccc20, pivot$0x1dbf3a0, __temp_26$0x1eccc20
            br __temp_22$0x1eccc20
        __temp_26$0x1eccc20:
            ldelem tmp$0x1dbf3a0, idx$0x1dbf550, p$0x1dbf3a0
            ldelem __temp_28$0x1eccca0, idx$0x1dbf550, i$0x1dbf3a0
            stelem idx$0x1dbf550, p$0x1dbf3a0, __temp_28$0x1eccca0
            stelem idx$0x1dbf550, i$0x1dbf3a0, tmp$0x1dbf3a0
            add p$0x1dbf3a0, p$0x1dbf3a0, 0x1:i8
        __temp_22$0x1eccc20:
        __temp_19$0x1eccba0:
            add i$0x1dbf3a0, i$0x1dbf3a0, 0x1:i8
            br __temp_18$0x1eccba0
        __temp_20$0x1eccba0:
            ldelem tmp$0x1dbf3a0, idx$0x1dbf550, p$0x1dbf3a0
            ldelem __temp_32$0x1eccba0, idx$0x1dbf550, end$0x1dbf550
            stelem idx$0x1dbf550, p$0x1dbf3a0, __temp_32$0x1eccba0
            stelem idx$0x1dbf550, end$0x1dbf550, tmp$0x1dbf3a0
            add __temp_33$0x1eccba0, p$0x1dbf3a0, 0x1:i8
            stelem stack$0x1dbf3a0, stop$0x1dbf3a0, __temp_33$0x1eccba0
            add stop$0x1dbf3a0, stop$0x1dbf3a0, 0x1:i8
            stelem stack$0x1dbf3a0, stop$0x1dbf3a0, end$0x1dbf550
            add stop$0x1dbf3a0, stop$0x1dbf3a0, 0x1:i8
            stelem stack$0x1dbf3a0, stop$0x1dbf3a0, start$0x1dbf550
            add stop$0x1dbf3a0, stop$0x1dbf3a0, 0x1:i8
            sub __temp_37$0x1eccba0, p$0x1dbf3a0, 0x1:i8
            stelem stack$0x1dbf3a0, stop$0x1dbf3a0, __temp_37$0x1eccba0
            add stop$0x1dbf3a0, stop$0x1dbf3a0, 0x1:i8
            blt 0x2800:i8, stop$0x1dbf3a0, __temp_41$0x1eccba0
            br __temp_39$0x1eccba0
        __temp_41$0x1eccba0:
            call output_char$0x1ef28a0, <missing>, 0x73:i1
            call output_char$0x1ef28a0, <missing>, 0x6F:i1
            call output_char$0x1ef28a0, <missing>, 0x72:i1
            call output_char$0x1ef28a0, <missing>, 0x74:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_char$0x1ef28a0, <missing>, 0x73:i1
            call output_char$0x1ef28a0, <missing>, 0x74:i1
            call output_char$0x1ef28a0, <missing>, 0x61:i1
            call output_char$0x1ef28a0, <missing>, 0x63:i1
            call output_char$0x1ef28a0, <missing>, 0x6B:i1
            call output_char$0x1ef28a0, <missing>, 0x20:i1
            call output_char$0x1ef28a0, <missing>, 0x6F:i1
            call output_char$0x1ef28a0, <missing>, 0x76:i1
            call output_char$0x1ef28a0, <missing>, 0x65:i1
            call output_char$0x1ef28a0, <missing>, 0x72:i1
            call output_char$0x1ef28a0, <missing>, 0x66:i1
            call output_char$0x1ef28a0, <missing>, 0x6C:i1
            call output_char$0x1ef28a0, <missing>, 0x6F:i1
            call output_char$0x1ef28a0, <missing>, 0x77:i1
            call output_char$0x1ef28a0, <missing>, 0xA:i8
            asm "exit:a"
        __temp_39$0x1eccba0:
        __temp_13$0x1eccb20:
        __temp_5$0x1dbf3a0:
            br __temp_4$0x1dbf3a0
        __temp_6$0x1dbf3a0:
            ret
    }
    function output_double
    {
            clt __temp_480$0x20606f0, d$0x2060670, 0.000000:r8
            bnz __temp_480$0x20606f0, __temp_481$0x20606f0
            br __temp_479$0x20606f0
        __temp_481$0x20606f0:
            sub d$0x2060670, 0.000000:r8, d$0x2060670
            call output_char$0x1ef28a0, <missing>, 0x2D:i1
        __temp_479$0x20606f0:
            blt 9220000000000000000.000000:r8, d$0x2060670, __temp_485$0x20606f0
            br __temp_483$0x20606f0
        __temp_485$0x20606f0:
            call output_double_binary$0x1ef28a0, <missing>, d$0x2060670
            ret
        __temp_483$0x20606f0:
            blt d$0x2060670, 0.000000:r8, __temp_488$0x20606f0
            br __temp_486$0x20606f0
        __temp_488$0x20606f0:
            call output_double_binary$0x1ef28a0, <missing>, d$0x2060670
            ret
        __temp_486$0x20606f0:
            conv n$0x20606f0, d$0x2060670
            call output_q$0x1ef28a0, <missing>, n$0x20606f0
            conv __temp_490$0x20606f0, n$0x20606f0
            sub d$0x2060670, d$0x2060670, __temp_490$0x20606f0
            call output_char$0x1ef28a0, <missing>, 0x2E:i1
            mov i$0x20606f0, 0x0:i8
        __temp_492$0x20606f0:
            ble 0x10:i8, i$0x20606f0, __temp_494$0x20606f0
            mul d$0x2060670, d$0x2060670, 10.000000:r8
            conv n$0x20606f0, d$0x2060670
            call output_q$0x1ef28a0, <missing>, n$0x20606f0
            conv __temp_498$0x2063070, n$0x20606f0
            sub d$0x2060670, d$0x2060670, __temp_498$0x2063070
        __temp_493$0x20606f0:
            add i$0x20606f0, i$0x20606f0, 0x1:i8
            br __temp_492$0x20606f0
        __temp_494$0x20606f0:
            ret
    }
    function p_align_to
    {
            sub __temp_153$0x1f78a20, size$0x1f78980, 0x1:i8
            div __temp_154$0x1f78a20, __temp_153$0x1f78a20, 0x1000:i8
            add __temp_155$0x1f78a20, __temp_154$0x1f78a20, 0x1:i8
            mul __temp_156$0x1f78a20, __temp_155$0x1f78a20, 0x1000:i8
            ret __temp_156$0x1f78a20
    }
    function init_PR_var
    {
            sti 0x300003000:i, 0x300003008:i8
            sti 0x3FFFFFFF8:i, 0x3FFFF0000:i8
            sti 0x200100000:i, 0x1:i8
            ret
    }
    function _get_new_pa
    {
            ldi __temp_158$0x1f7abe0, 0x3FFFFFFF8:i
            sub __temp_159$0x1f7abe0, __temp_158$0x1f7abe0, size$0x1f7ab40
            ble 0x300200000:i8, __temp_159$0x1f7abe0, __temp_161$0x1f7abe0
            mov ret$0x1f7abe0, 0x0:i8
            br __temp_157$0x1f7abe0
        __temp_161$0x1f7abe0:
            ldi __temp_162$0x1f7ac80, 0x3FFFFFFF8:i
            sub __temp_163$0x1f7ac80, __temp_162$0x1f7ac80, size$0x1f7ab40
            sti 0x3FFFFFFF8:i, __temp_163$0x1f7ac80
            ldi ret$0x1f7abe0, 0x3FFFFFFF8:i
        __temp_157$0x1f7abe0:
            conv __temp_165$0x1f7abe0, ret$0x1f7abe0
            ret __temp_165$0x1f7abe0
    }
    function output_double_binary
    {
            lda __temp_455$0x204d1a0, d$0x204d100
            ldi lv$0x204d1a0, __temp_455$0x204d1a0
            and sign$0x204d1a0, 0x8000000000000000:i8, lv$0x204d1a0
            and frac_raw$0x204d1a0, 0xFFFFFFFFFFFFF:i8, lv$0x204d1a0
            add frac$0x204d1a0, frac_raw$0x204d1a0, 0x10000000000000:i8
            and exp_raw$0x204d1a0, 0x7FF0000000000000:i8, lv$0x204d1a0
            div exp_raw$0x204d1a0, exp_raw$0x204d1a0, 0x10000000000000:i8
            sub __temp_462$0x204d1a0, exp_raw$0x204d1a0, 0x3FF:i8
            sub exp$0x204d1a0, __temp_462$0x204d1a0, 0x34:i8
            beq exp_raw$0x204d1a0, 0x0:i8, __temp_466$0x204d1a0
            br __temp_464$0x204d1a0
        __temp_466$0x204d1a0:
            beq frac_raw$0x204d1a0, 0x0:i8, __temp_469$0x204d240
            br __temp_467$0x204d240
        __temp_469$0x204d240:
            call output_char$0x1ef28a0, <missing>, 0x30:i1
            ret
        __temp_467$0x204d240:
        __temp_464$0x204d1a0:
            beq exp_raw$0x204d1a0, 0x7FF:i8, __temp_472$0x204d1a0
            br __temp_470$0x204d1a0
        __temp_472$0x204d1a0:
            beq frac_raw$0x204d1a0, 0x0:i8, __temp_475$0x204eeb0
            call output_char$0x1ef28a0, <missing>, 0x4E:i1
            call output_char$0x1ef28a0, <missing>, 0x61:i1
            call output_char$0x1ef28a0, <missing>, 0x4E:i1
            call output_char$0x1ef28a0, <missing>, 0x73:i1
            ret
            br __temp_473$0x204eeb0
        __temp_475$0x204eeb0:
            call output_char$0x1ef28a0, <missing>, 0x49:i1
            call output_char$0x1ef28a0, <missing>, 0x6E:i1
            call output_char$0x1ef28a0, <missing>, 0x66:i1
            ret
        __temp_473$0x204eeb0:
        __temp_470$0x204d1a0:
            beq sign$0x204d1a0, 0x8000000000000000:i8, __temp_478$0x204d1a0
            br __temp_476$0x204d1a0
        __temp_478$0x204d1a0:
            call output_char$0x1ef28a0, <missing>, 0x2D:i1
        __temp_476$0x204d1a0:
            call output_q$0x1ef28a0, <missing>, frac$0x204d1a0
            call output_char$0x1ef28a0, <missing>, 0x4C:i1
            call output_char$0x1ef28a0, <missing>, 0x2A:i1
            call output_char$0x1ef28a0, <missing>, 0x32:i1
            call output_char$0x1ef28a0, <missing>, 0x2A:i1
            call output_char$0x1ef28a0, <missing>, 0x2A:i1
            call output_q$0x1ef28a0, <missing>, exp$0x204d1a0
            ret
    }
}
